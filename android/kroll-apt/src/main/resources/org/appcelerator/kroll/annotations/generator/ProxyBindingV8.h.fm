/**
 * Appcelerator Titanium Mobile
 * Copyright (c) 2011-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */

/** This is generated, do not edit by hand. **/
<#import "ProxyBinding.fm" as Proxy>

#include "Proxy.h"

<@Proxy.openNamespace/>

<#assign className = Proxy.className(proxyClassName)>
class ${className} : public titanium::Proxy
{
public:
	explicit ${className}();

	static void bindProxy(v8::Local<v8::Object>, v8::Local<v8::Context>);
	static v8::Local<v8::FunctionTemplate> getProxyTemplate(v8::Isolate*);
	static v8::Local<v8::FunctionTemplate> getProxyTemplate(v8::Local<v8::Context>);
	static void dispose(v8::Isolate*);

	static jclass javaClass;

private:
	static v8::Persistent<v8::FunctionTemplate> proxyTemplate;
	static v8::Persistent<v8::Object> moduleInstance;

	// Methods -----------------------------------------------------------
	<@Proxy.listMethods ; isFirst, name, method>
	static void ${method.apiName}(const v8::FunctionCallbackInfo<v8::Value>&);
	</@Proxy.listMethods>

	// Dynamic property accessors ----------------------------------------
	<@Proxy.listDynamicProperties ; isFirst, name, property, getSignature, setSignature>
	<#if property.get>
	static void getter_${name}(v8::Local<v8::Name> name, const v8::PropertyCallbackInfo<v8::Value>& info);
	</#if>
	<#if property.set>
	static void setter_${name}(v8::Local<v8::Name> name, v8::Local<v8::Value> value, const v8::PropertyCallbackInfo<void>& info);
	</#if>
	</@Proxy.listDynamicProperties>

	<#if interceptor??>
	static void interceptor(v8::Local<v8::String> property, const v8::PropertyCallbackInfo<v8::Value>& info);
	</#if>
};

<@Proxy.closeNamespace/>
