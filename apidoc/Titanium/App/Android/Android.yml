---
name: Titanium.App.Android
summary: A module used to access Android application resources.
description: |
    For more information, refer to the official documentation on the Android Developer website about 
    [application resources](https://developer.android.com/guide/topics/resources/index.html).
extends: Titanium.Module
since: "1.5"
platforms: [android]

properties:
  - name: R
    summary: The `R` namespace for application resources.
    description: |
        The properties and sub-properties of this object relate directly to the
        native application resources `R` class, and thus have the same syntax.
        For more information, refer to the official documentation on the
        Android Developer website about
        [accessing application resources](https://developer.android.com/guide/topics/resources/accessing-resources.html).

        For example, if the file `platform/android/res/drawable/icon.png`
        exists in the project, it can be accessed using its resource name,
        as follows.

        ``` js
        var resid = Titanium.App.Android.R.drawable.icon;
        ```

        To access system-wide resources, rather than application resources, use
        <Titanium.Android.R> instead.
    type: Titanium.Android.R
    permission: read-only

  - name: appVersionCode
    summary: |
        The version number of the application. 
    type: Number
    permission: read-only
    since: 3.3.0
    
  - name: appVersionName
    summary: |
        The version name of the application. 
    type: String
    permission: read-only
    since: 3.3.0

  - name: launchIntent
    summary: |
        Return the intent that was used to launch the application.
    description : |
        This intent will not change for the lifetime of the application. Its [action](Titanium.Android.Intent.action)
        is typically set to "android.intent.action.MAIN" when launched via the app list screen.

        This launch intent can be used to resume the app while backgrounded via the
        [startActivity()](Titanium.Android.Activity.startActivity) method or via a notification.

        When the app is launched via a data intent such as a URL, shortcut, notification, etc. then that intent
        is provided by the [Ti.Android.rootActivity](Titanium.Android.rootActivity) object's
        [intent](Titanium.Android.Activity.intent) property instead. That intent will initially be set to the
        launch intent, but will change when a ["newintent"](Titanium.Android.Activity.newintent) event has been fired.
        You should always read the root activity's intent instead of the launch intent for data.
    type: Titanium.Android.Intent
    permission: read-only
    since: 3.3.0

events:
  - name: shortcutitemclick
    summary: Fired when a <Titanium.UI.ShortcutItem> is clicked.
    properties:
      - name: id
        summary: Identifier of the clicked shortcut item.
        type: String
    since: 7.5.0

examples:
  - title: Custom String Resource
    example: |
        
        Custom Android resources may be placed in `platform/android` in the project root.  
        For example, to utilize a custom localization file, create and populate 
        `platform/android/res/values/mystrings.xml` with the following data.
        
        ``` xml
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <string name="mystring">testing 1 2 3</string>
        </resources>
        ```
        
        In Javascript, this can be accessed as follows.
    
        ``` js
        var activity = Ti.Android.currentActivity;
        var R = Ti.App.Android.R;
        
        var mystring = activity.getString(R.string.mystring);
        Ti.API.debug("mystring = " + mystring);
        ```
