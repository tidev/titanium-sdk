---
name: Titanium.Android.Activity
summary: The Titanium binding of an Android Activity.
description: |
    According to the Android API Reference, an activity is "a single, focused thing that a
    user can do."

    In almost all cases, an activity is associated with a window.  Activities are central
    to the Android **Back** button navigation -- the **Back** button closes the current
    activity and returns to whatever activity was open previously.

    In Titanium, the Android Activity is not created until a window or tab group is opened.
    After a Window or TabGroup object is created but before it is opened, its `activity` property
    refers to an empty JavaScript object. You can use it to set properties on the activity, such as
    the `onCreateOptionsMenu` property, but you cannot invoke any Activity methods.

    After the window or tab group opens, a real Activity object is created and the properties from
    the JavaScript object are copied over. The `activity` property now refers to this real Activity object,
    which you can use to call the various Activity methods. For example, to use the
    `invalidateOptionsMenu` method, you need to get the activity after the window or tab group opens.

    See also [android.app.Activity](https://developer.android.com/reference/android/app/Activity.html)
    in the Android API Reference.

    #### Activity Lifecycle

    In Android, activities are created, started, resumed, paused, stopped, destroyed and restarted.
    Titanium generates lifecycle events for activities but does not generate application-level events.
    To be notified when an activity's lifecycle event is triggered, assign callbacks to the following activity
    properties:

      * [onCreate](Titanium.Android.Activity.onCreate)
      * [onStart](Titanium.Android.Activity.onStart)
      * [onResume](Titanium.Android.Activity.onResume)
      * [onPause](Titanium.Android.Activity.onPause)
      * [onStop](Titanium.Android.Activity.onStop)
      * [onDestroy](Titanium.Android.Activity.onDestroy)
      * [onRestart](Titanium.Android.Activity.onRestart)

    See also the "Understand the Lifecycle Callbacks" section in
    [Android Developers: Activity Lifecycle](https://developer.android.com/training/basics/activity-lifecycle/starting.html).

    #### Don't keep activities option

    Android 4.0 and greater devices have an option called **Don't keep activities** under the **Developer
    Options** menu. When this option is enabled, the Android OS will destroy an activity as soon as it
    is stopped. It is intended to help developers debug their apps. For example, it can simulate the
    case that Android will kill an activity in the background due to memory pressure. In
    normal use, it is not recommended to turn this option on because this may lead to unexpected issues
    on the apps, such as freezes, force closes and reboots.

    When the **Don't keep activities** option is enabled, the lifecycle of the activity is different
    from the normal case. Whenever the user leaves an activity, such as backgrounding the app using the
    HOME button, this activity is destroyed by Android, which calls `onDestroy`.  In the normal case, `onStop`
    would be called and the activity would not be destroyed.  Later, when the user goes back to that activity, this
    activity will be recreated, which calls `onCreate`.  In the normal case, since the activity is not destroyed, 
    `onRestart` would be called instead.  Therefore, some events, such as the open and close events on the Window
    or TabGroup, will be fired differently from the normal case, and the root window of the app must set
    [exitOnClose](Titanium.UI.Window.exitOnClose) to true; otherwise, the app will be unable to back out, that is,
    hitting the BACK button in the root window will not allow the application to exit.

    #### Deprecated Behavior

    Prior to Release 8.0.0, you would set the below "tiapp.xml" property to `true` to handle the case
    where the Android OS would automatically close all child activity windows after the app has been backgrounded
    for about 30 minutes, bringing the app back to the root splash screen activity window. The below property
    would restart your app's UI in this case. This is no longer needed in 8.0.0 since Titanium now sets the
    "AndroidManifest.xml" setting
    [android:alwaysRetainTaskState](https://developer.android.com/guide/topics/manifest/activity-element#always)
    to the root activity instead

    ``` xml
    <property name="ti.android.root.reappears.restart" type="bool">true</property>
    ```

    Prior to Release 3.4.0, to monitor lifecycle events, use the activity's events, `create`, `destroy`,
    `pause`, `resume`, `start` and `stop`, to be notified when an activity is created, destroyed, paused,
    resumed, started and stopped, respectively.

    You can only set Activity properties from a TabGroup object after the tab group opens.

    Prior to Release 3.2.0, you can create either a "lightweight" or "heavyweight" window, as
    described on the <Titanium.UI.Window> reference page. A *heavyweight* window creates a 
    new `Activity`. A *lightweight* window runs inside the same activity as the code that
    created it.  If you try to reference the activity of lightweight window, it returns undefined.
extends: Titanium.Proxy
platforms: [android]
createable: false
since: "1.5"
methods:
  - name: finish
    summary: Closes this activity.
    description: |
        See also:
        [finish](https://developer.android.com/reference/android/app/Activity.html#finish())
        in the Android API Reference.

  - name: getString
    summary: Gets an Android or Application string using the specified Resource ID and optional format arguments. 
    description: |
        If the optional format arguments are supplied, these are substituted for the
        corresponding format specifiers in the string. For example, given the following
        string resource:

        ``` xml
        <string name="greeting">"Hello %1$s, this is %2$s."</string>
        ```

        You could call `getString` like this:

        ``` js
        Ti.Android.currentActivity.getString(Ti.App.Android.R.string.greeting,  "Bob", "Doug" );
        ```

        The resulting string is:

        ```
        "Hello Bob, this is Doug."
        ```

        See also:
        *   [getString](https://developer.android.com/reference/android/content/Context.html#getString(int))
            in the Android Developer Reference
        *   [Formatter](https://developer.android.com/reference/java/util/Formatter.html)
            in the Android Developer Reference
        *   [String Resources](https://developer.android.com/guide/topics/resources/string-resource.html#String)
            in the Android Developer Guide
    returns:
        type: String
    parameters:
      - name: resourceId
        summary: Resource ID from the Application or Android.
        type: Number

      - name: format
        summary: Optional format arguments for the String resource. May be repeated.
        type: any
        repeatable: true
        optional: true

  - name: invalidateOptionsMenu
    summary: Declares that the option menu has changed and should be recreated.
    description: |
        This method needs to be used in Android 3.0 and above when changing menus at runtime.  See
        [changingTheMenu](https://developer.android.com/guide/topics/ui/menus.html#ChangingTheMenu) in 
        the Android API Reference for more details. 
    since: "3.0.0"

  - name: setRequestedOrientation
    summary: Sets the requested Activity orientation. 
    description: |
        See also:
        [setRequestedOrientation](https://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int))
        in the Android API Reference.
    parameters:
      - name: orientation
        summary: Orientation mode for the activity.
        constants: Titanium.Android.SCREEN_ORIENTATION_*
        type: Number
    deprecated:
      since: "10.0.0"
      removed: "10.0.0"
      notes: Use the <Titanium.Android.requestedOrientation> property instead

  - name: setResult
    summary: Sets the result of this activity using an `Intent`. 
    description: |
        This method should only be used by [Ti.Android.rootActivity](Titanium.Android.rootActivity) when launched
        by another app via [startActivityForResult](Titanium.Android.Activity.startActivityForResult). After calling
        `setResult()`, you are expected to call the root activity's [finish](Titanium.Android.Activity.finish)
        method afterwards to return the result to the calling app.

        See Android's documentation for
        [setResult](https://developer.android.com/reference/android/app/Activity.html#setResult(int)).
    parameters:

      - name: resultCode
        summary: Result code for this activity.
        constants: Titanium.Android.RESULT_*
        type: Number

      - name: intent
        summary: An optional `Intent` with extra result data.
        type: Titanium.Android.Intent
        optional: true

  - name: setSupportActionBar
    summary: Sets a toolbar instance to be used as an ActionBar.
    description: |
        This method is used if you want to add a Toolbar as an ActionBar after the Activity has been created.
        If you want to set it up before that [supportToolbar](Titanium.Android.Activity.supportToolbar) must be used.
    parameters:
      - name: toolbar
        summary: Instance of a toolbar to be used as an ActionBar
        type: Titanium.UI.Toolbar  
    since: 6.2.0

  - name: startActivity
    summary: Starts a new activity, using the passed in `Intent` as the description. 
    description: |
        See also: [startActivity](https://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent))
            in the Android Developer Reference.
    parameters:
      - name: intent
        summary: Description of the activity to start.
        type: Titanium.Android.Intent

  - name: startActivityForResult
    summary: The same as `startActivity`, but also accepts a callback function for handling the result of the started Activity. 
    description:  |
        See also: 
        [startActivityForResult](https://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)) 
        in the Android Developer Reference.
    parameters:

      - name: intent
        summary: Description of the activity to start.
        type: Titanium.Android.Intent

      - name: callback
        summary: |
            Callback function to be executed when the activity sets result. See
            examples.
        type: Callback<ActivityResult>
        
  - name: openOptionsMenu
    summary: Programmatically opens the options menu.
    description: |
        See also: [onMenuOpened](https://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu))
        in the Android API Reference.
    since: "3.0.0"
    
  - name: sendBroadcast
    summary: Broadcast the passed in `Intent` to all `BroadcastReceiver`s. 
    since: "3.2.0"
    parameters:
      - name: intent
        summary: Description of the broadcast.
        type: Titanium.Android.Intent

  - name: sendBroadcastWithPermission
    summary: Broadcast the passed in `Intent` to all `BroadcastReceiver`s with an optional permission.
    since: "3.2.0"
    parameters:
      - name: intent
        summary: Description of the broadcast.
        type: Titanium.Android.Intent
      - name: receiverPermission
        summary: Name of the permission that the receiver should hold in order to receive the broadcast.
        type: String
        optional: true

events:
  - name: create
    summary: Fired from the activity's `onCreate` method.
    deprecated:
        since: "3.4.0"
        removed: "9.0.0"
        notes: Use the [Titanium.Android.Activity.onCreate](Titanium.Android.Activity.onCreate) callback property instead.
    description: |
        See also:
        [onCreate](https://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle))
        in the Android Developer Reference.

  - name: destroy
    summary: Fired from the activity's `onDestroy` method.
    deprecated:
        since: "3.4.0"
        removed: "9.0.0"
        notes: Use the [Titanium.Android.Activity.onDestroy](Titanium.Android.Activity.onDestroy) callback property instead.
    description: |
        See also: [onDestroy](https://developer.android.com/reference/android/app/Activity.html#onDestroy())
        in the Android Developer Reference.

  - name: newintent
    summary: |
        Fired when the activity is already running and an intent different than the one that launched it was received.
    description: |
        This event will only be fired by [Ti.Android.rootActivity](Titanium.Android.rootActivity), which is
        the splash screen activity. This event will never be fired by any of the child activities. The root
        activity' [intent](Titanium.Android.Intent) property will be updated when to the new intent when fired.

        See also:
        [onNewIntent](https://developer.android.com/reference/android/app/Activity.html#onNewIntent(android.content.Intent))
        in the Android Developer Reference.
    properties:
      - name: intent
        summary: The `Intent` passed to the native `onNewIntent` method.
        type: Titanium.Android.Intent
    since: '3.0.0'

  - name: onIntent
    summary: Fired when the activity is launched.
    properties:
      - name: intent
        summary: The `Intent` used to launch the Activity.
        type: Titanium.Android.Intent
    since: '6.0.0'

  - name: pause
    summary: Fired when the activity is paused.
    deprecated:
        since: "3.4.0"
        removed: "9.0.0"
        notes: Use the [Titanium.Android.Activity.onPause](Titanium.Android.Activity.onPause) callback property instead.
    description: |
        See also:
        [onPause](https://developer.android.com/reference/android/app/Activity.html#onPause())
        in the Android Developer Reference.

  - name: restart
    summary: Fired when the activity is restarted.
    deprecated:
        since: "3.4.0"
        removed: "9.0.0"
        notes: Use the [Titanium.Android.Activity.onRestart](Titanium.Android.Activity.onRestart) callback property instead.
    description: |
        See also: [onRestart](https://developer.android.com/reference/android/app/Activity.html#onRestart())
        in the Android Developer Reference.

  - name: resume
    summary: Fired when the activity is resumed.
    deprecated:
        since: "3.4.0"
        removed: "9.0.0"
        notes: Use the [Titanium.Android.Activity.onResume](Titanium.Android.Activity.onResume) callback property instead.
    description: |
        See also: [onResume](https://developer.android.com/reference/android/app/Activity.html#onResume())
        in the Android Developer Reference.

  - name: start
    summary: Fired when the activity is started.
    deprecated:
        since: "3.4.0"
        removed: "9.0.0"
        notes: Use the [Titanium.Android.Activity.onStart](Titanium.Android.Activity.onStart) callback property instead.
    description: |
        See also: [onStart](https://developer.android.com/reference/android/app/Activity.html#onStart())
        in the Android Developer Reference.

  - name: stop
    summary: Fired when the activity is stopped.
    deprecated:
        since: "3.4.0"
        removed: "9.0.0"
        notes: Use the [Titanium.Android.Activity.onStop](Titanium.Android.Activity.onStop) callback property instead.
    description: |
        See also: [onStop](https://developer.android.com/reference/android/app/Activity.html#onStop())
        in the Android Developer Reference.

  - name: userleavehint
    summary: Fired when the activity is about to go into the background as a result of user choice.
    description: |
        See also:
        [onUserLeaveHint](https://developer.android.com/reference/android/app/Activity.html#onUserLeaveHint())
        in the Android Developer Reference.
    since: "3.2.0"

  - name: userinteraction
    summary: Called whenever a key, touch, or trackball event is dispatched to the activity.
    description: |
        Implement this method if you wish to know that the user has interacted with the device in some 
        way while your activity is running. This event and `userleavehint` are intended to help activities 
        manage status bar notifications intelligently; specifically, for helping activities determine the 
        proper time to cancel a notfication.

        All calls to your activity's "userleavehint" event will be accompanied by calls to "userinteraction".
        This ensures that your activity will be told of relevant user activity such as pulling down the 
        notification pane and touching an item there.

        Note that this callback will be invoked for the touch down action that begins a touch gesture, 
        but may not be invoked for the touch-moved and touch-up actions that follow.

        See also:
        [onUserInteraction](https://developer.android.com/reference/android/app/Activity.html#onUserInteraction())
        in the Android Developer Reference.
    since: "7.5.0"

properties:
  - name: actionBar
    summary: The action bar for this activity.
    description: |
        See also: [Action Bar](https://developer.android.com/guide/topics/ui/actionbar.html) in
        the Android Developer Reference.
    type: Titanium.Android.ActionBar
    permission: read-only

  - name: intent
    summary: The last `Intent` received by this activity.
    description: |
        Will initially be set to the intent that created/launched the activity. If this is the app's root activity,
        then this intent will change when a "newintent" event has been fired.
    type: Titanium.Android.Intent
    permission: read-only

  - name: onCreate
    summary: |
        Callback function called when the Android activity is created.
    since: "3.4.0"
    type: Callback<ActivityLifecycleCallbackObject>

  - name: onCreateOptionsMenu
    summary: |
        Callback function called to initially create an Android options menu
        for this Activity when the user presses the **Menu** button.
    description: |
         See the menu examples in <Titanium.Android.Menu>.

         See also: 
         [Creating an Options Menu](https://developer.android.com/guide/topics/ui/menus.html#options-menu) 
         in the Android Developer's Guide.
    type: Callback<OptionsMenuCallbackObject>

  - name: onDestroy
    summary: |
        Callback function called when the Android activity is destroyed.
    since: "3.4.0"
    type: Callback<ActivityLifecycleCallbackObject>

  - name: onPause
    summary: |
        Callback function called when the Android activity is paused.
    since: "3.4.0"
    type: Callback<ActivityLifecycleCallbackObject>

  - name: onPrepareOptionsMenu
    summary:  |
        Callback function called to prepare an options menu for display when the user presses
        the **Menu** button. 
    description: |
         See the menu examples in <Titanium.Android.Menu>.

         See also: 
         [Creating an Options Menu](https://developer.android.com/guide/topics/ui/menus.html#options-menu) 
         in the Android Developer's Guide.
    type: Callback<OptionsMenuCallbackObject>

  - name: onRestart
    summary: |
        Callback function called when the Android activity is restarted.
    since: "3.4.0"
    type: Callback<ActivityLifecycleCallbackObject>

  - name: onResume
    summary: |
        Callback function called when the Android activity is resumed.
    since: "3.4.0"
    type: Callback<ActivityLifecycleCallbackObject>

  - name: onStart
    summary: |
        Callback function called when the Android activity is started.
    since: "3.4.0"
    type: Callback<ActivityLifecycleCallbackObject>

  - name: onStop
    summary: |
        Callback function called when the Android activity is stopped.
    since: "3.4.0"
    type: Callback<ActivityLifecycleCallbackObject>

  - name: requestedOrientation
    summary: Specifies a specific orientation for this activity.
    constants: Titanium.Android.SCREEN_ORIENTATION_*
    type: Number
    permission: write-only

  - name: supportToolbar
    summary: Toolbar instance that serves as ActionBar
    description: |
         This property is used to set a toolbar as an ActionBar prior to the actual activity creation.
         After the activity is created that must be done through the [setSupportActionBar()](Titanium.Android.Activity.setSupportActionBar) method.
    type: Titanium.UI.Toolbar
    since: "6.2.0"
    
examples:
  - title: Callback Example
    example: |
        The following example shows how to start an activity and retrieve a result code
        and optional data intent when the activity ends.

        ``` js        
        activity.startActivityForResult(intent, function(e) {
            // The request code used to start this Activity
            var requestCode = e.requestCode;
            // The result code returned from the activity 
            // (https://developer.android.com/reference/android/app/Activity.html#StartingActivities)
            var resultCode = e.resultCode;
            // A Titanium.Android.Intent filled with data returned from the Activity
            var intent = e.intent;
            // The Activity the received the result
            var source = e.source;
        });
        ```
        
---
name: ActivityResult
summary: |
    Simple object passed to the
    [startActivityForResult](Titanium.Android.Activity.startActivityForResult) callback.
properties:

  - name: requestCode
    summary: |
        Unique, automatically generated integer request code.
    type: Number

  - name: resultCode
    summary: |
        Integer result code that the started activity passed to
        [setResult](Titanium.Android.Activity.setResult).
    type: Number

  - name: intent
    summary: |
        Intent that can contain data returned to the caller. Data can be attached to
        the intent as "extras").
    type: Titanium.Android.Intent

---
name: ActivityLifecycleCallbackObject
summary: |
    Simple object passed to the <Titanium.Android.Activity> callbacks for
    onCreate, onDestroy, onPause, onResume, onStart, onStop, onRestart.

    Additional properties may be set on the Object.
properties:
  - name: source
    summary: The Activity firing the callback.
    type: Titanium.Android.Activity

---
name: OptionsMenuCallbackObject
summary: |
    Simple object passed to the <Titanium.Android.Activity> callbacks for
    onPrepareOptionsMenu and onCreateOptionsMenu.

    Additional properties may be set on the Object.
properties:
  - name: menu
    summary: The relevant Menu.
    type: Titanium.Android.Menu
