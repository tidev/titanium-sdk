# Titanium SDK 3.3.0 General Availability - 07/17/2014

### Contents

  * [About This Release](#about)
    * [Alloy 1.4.0](#alloy) 
    * [Studio 3.3.0](#studio)
    * [Titanium CLI 3.3.0](#cli)
    * [Android Wear and Android L SDK Support](#android_sdks)
    * [Windows Hybrid Platform Support](#windows)
  * [Notice of Feature and Behavior Changes](#changes)
    * [Android Platform](#deprecated_android)
      * [Action Bar](#action_bar)
      * [Lightweight Windows](#lightweight_windows)
      * [Target SDK Version](#target_sdk)
      * [Themes](#themes)
      * [View enabled property](#view_enabled)
    * [iOS Platform](#deprecated_ios)
      * [Building to a Device](#device_build)
      * [CFBundleShortVersionString](#cfbundleshortversion)
      * [CFBundleVersion for iTunes Sync Builds](#cfbundleversion)
      * [Database fieldcount method](#fieldcount)
    * [SSL Client Certificates](#ssl_cert)
    * [Titanium include method](#titanium_include)
  * [New Features](#features)
    * [Android Platform](#new_android)
      * [ActionBar Improvements](#actionbar)
      * [AppCompat Library](#appcompat)
      * [Application-Level APIs](#application_apis)
      * [AudioPlayer Improvements](#audio_player)
      * [Camera Improvements](#camera)
      * [Genymotion Virtual Devices](#genymotion)
      * [Label Padding](#label_padding)
      * [ListView and TableView Improvements](#android_listview)
      * [Proximity Sensor](#proximity_sensor)
      * [WebView SSL Error Event](#webview_ssl)
      * [Window Flags](#window_flags)
    * [BlackBerry Platform](#new_bb)
      * [applyProperties and removeAllChildren methods](#bb_methods)
    * [iOS Platform](#new_ios)
      * [Clipping Behavior](#clipping)
      * [Core Motion Module](#core_motion)
      * [HTTPClient Improvements](#http_client)
      * [ListView Improvements](#ios_listview)
      * [ScrollableView Move Methods](#scrollable_view_move)
      * [Switch Tint Colors](#switch_tint_colors)
      * [TabGroup Appearance](#ios_tab_group)
      * [View Shadows](#view_shadows)
      * [WebView and App URLs](#webview_app_urls)
      * [Window Navigation Buttons](#window_nav_buttons)
    * [SSL Certificate Support](#ssl_cert_support)
    * [TableView Search Improvements](#tableview_search)
    * [TextArea and TextField Selection](#text_selection)
  * [Known Issues](#known_issues)
    * [Alloy Studio Plugin](#alloy_plugin)
    * [Cannot Run KitchenSink with Genymotion](#ks_genymotion)
    * [Cannot Submit an iOS application with the Facebook Module](#facebook)
  * [API Changes](#apis) 
    * [New APIs](#new_apis)
    * [Deprecated APIs](#deprecated_apis)
    * [Removed APIs](#removed_apis)

<a name="about"></a>

## About This Release

This is the general availability (GA) release version of the Titanium SDK 3.3.0.  This Release
introduces a number of new features.  See [New Features](#features) for a summary of new features in
this release.

Note that this release includes feature and behavior changes. See [Notice of Feature and Behavior Changes in Release 3.3.0](#changes) for details.

This release includes over 300 bug fixes and improvements:

  * Full list of Issues that were addressed in Release 3.3.0

  * Fixed Android Issues

  * Fixed BlackBerry Issues

  * Fixed iOS Issues

  * Fixed CLI Issues


<a name="alloy"></a>
### Alloy 1.4.0

This release coincides with the release of Alloy 1.4.0, which includes an update to the Alloy plugin.
After upgrading to Alloy 1.4.0, there is a small chance the first build may fail.  For more
information, see the [Alloy Studio Plugin](#alloy_plugin) section.

**Summary of New Features:**

  * New API to set attributes of UI components within a controller-less view
  * Use custom run-time queries as TSS style selectors
  * Map Module integration:
    * Create annotations in XML Markup
    * Create annotations via data-binding
  * XML Markup/TSS Enhancements:
    * Set Android Action Bar options in XML Markup and TSS using the Menu element
    * Set left and right navigation button properties without a Button element in XML
    * Create date-time pickers with attributes in XML or TSS
    * Set keyboard and return key types using shorthand notation
  * Theme widget assets and styles as part your custom theme

For more details, see the Alloy
[Changelog](https://github.com/tidev/alloy/blob/1_4_X/CHANGELOG.md).

<a name="studio"></a>
### Studio 3.3.0

This release coincides with the release of Studio 3.3.0.

**Summary of New Features:**

  * Alloy project improvements
    * Create new view and style files from the project's right-context menu
    * Navigate to event handlers, ID styles and class styles
    * Define event handlers, ID styles and class styles
  * Content assistance improvements
    * Code assistance for Alloy namespace, XML proxy elements and methods that take constants
    * Hovers for XML attributes, XML elements and TSS attributes
  * Genymotion virtual device support
  * New Windows installer

For more details, see the [Studio Release Notes](https://titaniumsdk.com/api/).

<a name="cli"></a>
### Titanium CLI 3.3.0

This release coincides with the release of Titanium CLI 3.3.0.

**Summary of New Features:**

  * Create command supports custom templates (`--template` option)
  * Display iOS device log output
  * Genymotion virtual device support
  * Module creation support
  * Windows Hybrid platform support


For more details, see the CLI
[Changelog](https://github.com/tidev/titanium/blob/3_3_X/CHANGELOG.md).


<a name="android_sdks"></a>
### Android Wear and Android L SDK Support

The Titanium SDK does not officially support the Android L SDK, since it is in beta. However,
there are no known issues and you should be able build Titanium applications with it. You are
encouraged to file bugs if you encounter issues compiling or running Titanium applications with the
L SDK.

The Titanium SDK does not currently support the Android W SDK.

Also, if you have either the Android L or W SDKs installed, it's recommended that you explicitly set
the `targetSdkVersion` property in the `<uses-sdk/>` element in your project's `tiapp.xml` file. The
reason for doing this is that Studio, by default, uses the latest installed SDK to compile your
project. Both Android L and W have a target API level of 20, whereas the latest supported Android
SDK release has an API target level of 19. Setting the target API version explicitly ensures your
project will always compile and run as expected.

For example, the following sets the target and minimum API version to 19:

    <android xmlns:android="http://schemas.android.com/apk/res/android">
        <manifest>
            <application>...</application>
            <uses-sdk android:minSdkVersion="19"
                      android:targetSdkVersion="19"/>
        </manifest>
    </android>

<a name="windows"></a>
### Windows Hybrid Platform Support

This release supports Windows 8 Apps and Windows Phone 8 applications built using the Mobile Web
APIs.  Titanium turns your Mobile Web application in to Windows 8 JavaScript and Windows Phone HTML5
applications.

All development is done through the command-line tools. There is no support with Appcelerator or Titanium
Studio.

For information on getting started, see:

  * [Getting Started with the Windows Phone SDK](https://titaniumsdk.com/api/)
  * [Getting Started with the Windows 8 SDK](https://titaniumsdk.com/api/)

To access native features of the Windows Phone platform, create a module that uses the Titanium
Windows Phone 8 Reflection API to make calls to the native Windows Phone 8 API.  For details on
adding native Windows Phone 8 functionality to your application, see
[Windows Phone 8 Module Development Guide](https://titaniumsdk.com/api/).


<a name="changes"></a>
## Notice of Feature or Behavior Changes in Release 3.3.0

<a name="deprecated_android"></a>
### Android Platform

This section lists changes for the Android platform.

<a name="action_bar"></a>
#### Action Bar

Due to changes to support the appcompat library, the action bar is now displayed by default.
Previously, you had to set a theme to display the action bar.

To hide the action bar, the application needs to wait for the main window or tab group to open, then
call the Activity's
[actionbar.hide()](https://titaniumsdk.com/api/)
method; or create a theme that hides the action bar.

As of this Release, the `tiapp.xml` element, `<navbar-hidden>`, which used to be able to hide the
action bar, has no effect on Android applications.

For information about hiding the action bar, see [Android Action Bar: Hiding the Action Bar](https://titaniumsdk.com/api/).


<a name="lightweight_windows"></a>
#### Lightweight Windows

As of this Release, support for lightweight windows (windows without an Android Activity) is
removed and using the `ti.android.useLegacyWindow` property in the `tiapp.xml` file has no effect.

As <a href="https://titaniumsdk.com/api/">previously mentioned</a>,
all windows are heavyweight, and you cannot control the type of window created.

Prior to Release 3.2.0, all windows were lightweight by default and you had to explicitly create
a heavyweight window.

Due to this change, your application may behave differently or break since all windows are now
heavyweight.


<a name="target_sdk"></a>
#### Target SDK Version

Due to changes to support the appcompat library, if you set the Android target SDK version in your
tiapp.xml file, you must specify version 14 or higher. For example:

    <android xmlns:android="http://schemas.android.com/apk/res/android">
        <manifest>
            <uses-sdk android:targetSdkVersion="14"/>
        </manifest>
    </android>

If you do not set a target SDK, you need to have Android SDK 4.0.x (API level 14) or higher
installed to build the application.

The minimum supported Android SDK (`android:minSdkVersion`) is version 2.3.x or API level 10.
Titanium still supports devices running Android 2.3.x and greater.


<a name="themes"></a>
#### Themes
Due to changes to support the appcompat library, applications cannot use the base Holo, Light or
Dark themes.  If you are using a custom theme in your application, you must update the theme file to
use an AppCompat theme as the parent, for example:

`platform/android/res/values/mytheme.xml`:

    <?xml version="1.0" encoding="utf-8"?>
    <resources xmlns:android="http://schemas.android.com/apk/res/android">
        <style name="LightDarkBar" parent="Theme.AppCompat.Light.DarkActionBar"/>
    </resources>
    
For more information about using Android Themes, see [Android Themes](https://titaniumsdk.com/api/).

<a name="view_enabled"></a>
#### View enabled property

As of this Release, the Android-specific `enabled` property for view components is deprecated.  Use
the non-platform-specific
[touchEnabled](https://titaniumsdk.com/api/)
property to disable touch events for a view component.

<a name="deprecated_ios"></a>
### iOS Platform

This section lists changes for the iOS platform.

<a name="device_build"></a>
#### Building to a Device

By default, when building to an iOS device, the Titanium CLI and Studio will choose the first
connected device if any devices are connected.

Previously, the default device was **iTunes sync**.

<a name="cfbundleshortversion"></a>
#### CFBundleShortVersionString

To generate the CFBundleShortVersionString in the application's `info.plist` file for iOS packages,
the version field in the `tiapp.xml` is truncated to three dot-separated numbers.  For example,
'2.1' remains as '2.1', but '2.1.0.1' will be converted to '2.1.0'. 

Prior to Release 3.3.0, the version number was always converted to three dot-separated numbers when
creating a package.  For example, if you specify '2.1' or '2.1.0.1', the version number will be
converted to '2.1.0' for the final package.

<a name="cfbundleversion"></a>
#### CFBundleVersion for iTunes Sync Builds

To fix an issue with iTunes sync builds with iTunes 11.2 and later, the CFBundleVersion in the
application's `info.plist` file is set to an Epoch timestamp.

Previously, this field was set to the version field in the `tiapp.xml` file, then an Epoch timestamp
was appended to the end of the version.


<a name="fieldcount"></a>
#### Database fieldcount method

To achieve parity across platforms, the `Titanium.Database.ResultSet.fieldcount()` method has been
removed from the SDK.  Use the read-only
[Titanium.Database.ResultSet.fieldcount](https://titaniumsdk.com/api/)
property to retrieve the same information.

<a name="ssl_cert"></a>
### SSL Client Certificates

The mechanisms introduced in Release 3.1.0 to support SSL Certificate Stores for HTTP Clients are no
longer supported.

  * The Android-specific `Titanium.Network.HTTPClient` `addKeyManager` and `addTrustManager` methods are deprecated and will be removed in Release 3.4.0.
  * The iOS-specific `Titanium.Network.HTTPClient` `clientCertificateIdentity` and `clientCertificates` properties are no longer supported.

Use the HTTPClient's
[securityManager](https://titaniumsdk.com/api/)
property to implement support for SSL Certificate Stores.

<a name="titanium_include"></a>
### Titanium include method

As of this release, the `Titanium.include` method is deprecated.  This method was used to include
external JavaScript files into a project.

Instead, create a [CommonJS
module](https://titaniumsdk.com/api/) and use
the [require](https://titaniumsdk.com/api/) method to
include external JavaScript.


<a name="features"></a>
## New Features

This section describes new features introduced in Release 3.3.0.

<a name="new_android"></a>
### Android Platform

This section lists new features and improvements only available on the Android platform.

<a name="actionbar"></a>
#### ActionBar Improvements

This Release exposes the Android methods,
[setDisplayShowHomeEnabled](https://titaniumsdk.com/api/)
and
[setDisplayShowTitleEnabled](https://titaniumsdk.com/api/),
to programmatically show or hide the action bar home icon, and title and subtitle, respectively.

See also the *AppCompat Library* section below.

<a name="appcompat"></a>
#### AppCompat Library

As of this Release, the Titanium SDK uses the appcompat library to provide support for the Action
Bar on devices running Android 2.3.x and later.  Due to the addition of the appcompat library, there
are a number of behavior changes to the application:

  1. The action bar is now enabled by default.  Previously, you had to set a theme to enable the action bar.
  2. The target SDK must be set to API level 14 (Android 4.0.x) or higher, or you must have API level 14 or higher installed.
  3. If the application is using a custom theme, the parent theme must be based off an AppCompat theme.  The application cannot use the base Holo, Light or Dark themes.

For more information about using Android Themes and the Action Bar, see
[Android Themes](https://titaniumsdk.com/api/) and
[Android Action Bar](https://titaniumsdk.com/api/), respectively.


<a name="application_apis"></a>
#### Application-Level APIs

This Release introduces several application-level properties:

  * [appVersionCode](https://titaniumsdk.com/api/) of the application.
  * [appVersionName](https://titaniumsdk.com/api/) of the application.
  * [launchIntent](https://titaniumsdk.com/api/): returns the intent that was used to launch the application.

<a name="audio_player"></a>
#### AudioPlayer Improvements

This Release introduces the
[time](https://titaniumsdk.com/api/)
property to report or set the current playback time of the AudioPlayer.


<a name="camera"></a>
#### Camera Improvements

This Release adds support for camera features to the Android platform that were previously only
available for iOS:

  * [Titanium.Media.cameraFlashMode](https://titaniumsdk.com/api/) property: Use this property to control the device's camera flash mode.
  * [Titanium.Media.saveToPhotoGallery](https://titaniumsdk.com/api/) method: Use this method to save the photo to the device's gallery.

<a name="genymotion"></a>
#### Genymotion Virtual Devices

This Release officially supports testing Android applications on Genymotion virtual devices with
both the Titanium CLI and Studio.  Genymotion is an alternative to the Android SDK's native Android
Virtual Device manager. Genymotion emulators run a lot faster than the native Android emulators
(even with Intel Hardware Accelerated Execution Manger enabled). However, the Android virtual
devices provide more configurable options than the free Genymotion emulators. You can pay for an
enterprise license if you want more features with Genymotion.

For more information about installing and using Genymotion virtual devices, see [Installing Genymotion](https://titaniumsdk.com/api/).

<a name="label_padding"></a>
#### Label Padding

This Release introduces the
[includeFontPadding](https://titaniumsdk.com/api/)
property to increase the padding above and below the label to display diacritical marks, such as
accents and subscript curls.

<a name="android_listview"></a>
#### ListView and TableView Improvements

This Release introduces properties to show or hide a divider after the header or before the footer in either
a ListView or TableView:

  * [Titanium.UI.ListView.footerDividersEnabled](https://titaniumsdk.com/api/): controls displaying a divider before the footer view.
  * [Titanium.UI.ListView.headerDividersEnabled](https://titaniumsdk.com/api/): controls displaying a divider before the header view.
  * [Titanium.UI.TableView.footerDividersEnabled](https://titaniumsdk.com/api/): controls displaying a divider before the footer view.
  * [Titanium.UI.TableView.headerDividersEnabled](https://titaniumsdk.com/api/): controls displaying a divider before the header view.

This Release also adds the ability to disable animations when scrolling to an item in
ListView.  When using the `scrollToItem` method, set the `animated` property of the
optional animation dictionary to `false` to disable the scrolling animation.

    listView.scrollToItem(sIndex,iIndex,{animated:false});

Previously, scrolling animations could only be controlled on the iOS platform.


<a name="proximity_sensor"></a>
#### Proximity Sensor Support

This Release adds Android platform support for the proximity sensor, which determines if the user is
holding the phone to their ear to shut down the phone's display.  Use the following APIs to determine
the state of the proximity sensor:

  * [proximity event](https://titaniumsdk.com/api/): fires when the sensor changes.
  * [proximityDetection property](https://titaniumsdk.com/api/): set to `true` to enable proximity detection.
  * [proximityState property](https://titaniumsdk.com/api/): indicates the state of the proximity detector.

Previously, these APIs were only available for the iOS platform.


<a name="webview_ssl"></a>
#### WebView SSL Error Event

This Release introduces the
[sslerror](https://titaniumsdk.com/api/)
event that fires when an SSL error occurs during a request.  Use this event to set the `ignoreSslError` property
to allow the request to proceed or fail.

<a name="window_flags"></a>
#### Window Flags

This Release introduces two new properties to set flags on the window activity:

  * [flagSecure](https://titaniumsdk.com/api/): set to `true` to disable capturing the window in a screenshot or being dislayed in non-secure displays.
  * [windowFlags](https://titaniumsdk.com/api/): sets additional Window Manager Layout Parameter flags on the activity window.


<a name="new_bb"></a>
### BlackBerry Platform

This section lists new features and improvements only available on the BlackBerry platform.

<a name="bb_methods"></a>
#### applyProperties and removeAllChildren

As of this Release, the BlackBerry platform supports the
[applyProperties](https://titaniumsdk.com/api/) and
[removeAllChildren](https://titaniumsdk.com/api/)
methods.


<a name="new_ios"></a>
### iOS Platform

This section lists new features and improvements only available on the iOS platform.

<a name="clipping"></a>
#### Clipping Behavior

Use the
[clipMode](https://titaniumsdk.com/api/)
property to control the clipping behavior of the view component.  Set this property to one of the
following constants:

  * `Titanium.UI.iOS.CLIP_MODE_ENABLED` : enforces all child views to be clipped to this view's bounds.
  * `Titanium.UI.iOS.CLIP_MODE_DISABLED` : allows child views to be drawn outside the bounds of this view.
  * `Titanium.UI.iOS.CLIP_MODE_DEFAULT` : clipping is enabled if the view's children have clipping enabled, or the `borderRadius` or `borderWidth` properties are defined.

By default, the view component uses the `CLIP_MODE_DEFAULT` behavior.  Previously, clipping was
always enabled.

For more information, see the "iOS Clipping Behavior" section in the
[Titanium.UI.View API Reference](https://titaniumsdk.com/api/).

<a name="core_motion"></a>
#### Core Motion Module

The Core Motion module provides support for monitoring various hardware sensors on iOS devices, such
as the accelerometer, gyroscope, and magnetometer. The Core Motion module allows you to access the
measurements provided by these sensors.

For more information, see the
[Core Motion Module guide](https://titaniumsdk.com/api/) and
[CoreMotion API Reference](https://titaniumsdk.com/api/).

<a name="http_client"></a>
#### HTTPClient Improvements

As of this Release, the HTTP client on iOS uses the iOS `NSURLConnection` class, replacing the
`ASIHTTPRequest` class.  The new implementation did not add, modify or remove any APIs.  No
modifications to existing application should be required.

The HTTP Client for iOS now supports cookie management.  Previously, this feature was only available
for Android.


<a name="ios_listview"></a>
#### ListView Improvements

This Release introduces new APIs for ListView:

  * [Titanium.UI.View.pullBackgroundColor property](https://titaniumsdk.com/api/): controls the background color of the wrapper view of the pull view of a ListView or TableView.  Set this property on the view object contained in the pull view not on the ListView or the TableView.
  * [Titanium.UI.ListView.noresults event](https://titaniumsdk.com/api/): fires if `searchText` or `searchView` returns no results.


<a name="scrollable_view_move"></a>
#### ScrollableView Move Methods

This Release adds iOS support for the
[movePrevious](https://titaniumsdk.com/api/) and
[moveNext](https://titaniumsdk.com/api/)
methods to programmatically change the current view displayed in the scrollable view.

These methods plus the `scrollToView` method will animate the transition.  If you do not want to
animate the transition, use the `setCurrentPage` method.

Previously, these APIs were only available for Android and BlackBerry.


<a name="switch_tint_colors"></a>
#### Switch Tint Colors

This Release exposes iOS properties to customize the tint colors of a Switch:

  * [onTintColor](https://titaniumsdk.com/api/): sets the tint color of the switch when it is on.
  * [thumbTintColor](https://titaniumsdk.com/api/): sets the thumb color of the switch.
  * [tintColor](https://titaniumsdk.com/api/): sets the tint color of the switch when it is off. On iOS 7 and greater, this is only the outline color.


<a name="ios_tab_group"></a>
#### TabGroup Appearance

This Release introduces new properties to control the appearance of a Tab Group:

  * [navTintColor](https://titaniumsdk.com/api/): sets the tint color of the tabs.
  * [titleAttributes](https://titaniumsdk.com/api/): sets the title attributes of the tab.
  * [translucent](https://titaniumsdk.com/api/): controls the translucent behavior of the navigation bar of the tab.


<a name="toolbar_background"></a>
#### Toolbar Background

This Release introduces the
[extendBackground](https://titaniumsdk.com/api/)
property to extend the background of the Toolbar into the iOS 7 status bar.


<a name="view_shadows"></a>
#### View Shadows

To add a shadow to a view component, use the following properties to control the appearance of the
shadow:

  * [viewShadowColor](https://titaniumsdk.com/api/): sets the color of the shadow
  * [viewShadowOffset](https://titaniumsdk.com/api/): sets the offset of the shadow
  * [viewShadowRadius](https://titaniumsdk.com/api/): set the radius of the rounded corners of the shadow


<a name="webview_app_urls"></a>
#### WebView and App URLs

To have the WebView handle application URLs, such as a phone number, which is normally sent to a
shared application, use the
[handlePlatformUrl](https://titaniumsdk.com/api/)
property to override the default behavior.

<a name="window_nav_buttons"></a>
#### Window Navigation Buttons

This Release introduces the
[leftNavButtons](https://titaniumsdk.com/api/)
and
[rightNavButtons](https://titaniumsdk.com/api/)
properties to add multiples buttons to the left and right side of the iOS navigation bar.

Previously, only one button could be displayed in the left and right side of the iOS navigation bar. 


<a name="ssl_cert_support"></a>
### SSL Certificate Support

This Release introduces a new mechanism to support SSL certificates with the HTTPClient exposed as
the
[securityManager](https://titaniumsdk.com/api/)
property.  This property is only available on the Android and iOS platforms.


<a name="tableview_search"></a>
### TableView Search Improvements

This Release introduces the
[filterAnchored](https://titaniumsdk.com/api/)
property for TableView to limit searches to the start of the string.  For example, if this property is set to `true`,
searching for "ha" returns results for "Harold" and "Harvard", but not "Sharon" and "Jonathan".
If the property is set to `false`, the search returns all of the previous strings.

This property is only available on the Android and iOS platforms.

<a name="text_selection"></a>
### TextArea and TextField Selection

This Release introduces the `selection` property for TextArea and TextField to return the start
location and length of the currently selected text.  This property can also be used to get the
current location of the cursor. This property is only available on the Android and iOS platforms.

  * [Titanium.UI.TextArea.selection](https://titaniumsdk.com/api/): returns the currently selected text of the TextArea.
  * [Titanium.UI.TextField.selection](https://titaniumsdk.com/api/): returns the currently selected text of the TextField.


<a name="known_issues"></a>
## Known Issues

<a name="alloy_plugin"></a>
### Alloy Studio Plugin

Alloy 1.4.0 includes changes to the Alloy plugin, which is used by Studio to compile and launch your
project. These changes will be applied automatically the first time you build a project after
updating to 1.4.0. However, because the first build uses the old plugin, there is a small chance
that it will fail. Retrying the build should resolve the issue, or you can manually update the
plugin with the following command:

    alloy install plugin [path_to_project]

If you enter this command while in your project's folder, omit the path.

CLI users are not affected by this change.


<a name="ks_genymotion"></a>
### Cannot Run KitchenSink with Genymotion

Genymotion virtual devices do not include the Google Play Services SDK.  If you want to run KitchenSink on a
Genymotion virtual device, you need to install the Google Play Services SDK to the virtual device.

For instructions, see
[http://www.tushroy.com/2013/12/installing-google-play-services-on-genymotion-2-0.html](http://www.tushroy.com/2013/12/installing-google-play-services-on-genymotion-2-0.html).

<a name="facebook"></a>
### Cannot Submit an iOS application with the Facebook Module

When including the Facebook module in an iOS project and built for the iTunes Store, during the
validation process you may receive an error message referring to an Improper Advertising identifier
[IDFA] Usage.

As part of the Apple review process when submitting an application, you will be asked if your app
uses the Advertising Identifier (IDFA). Please check "Yes". You will then be asked how your app
makes use of it. The question will take this form:

    This app uses the Advertising Identifier to (select all that apply)?
    - Serve advertisements within the app
    - Attribute this app installation to a previously served advertisement
    - Attribute an action taken within this app to a previously served advertisement

Select the second and third options. 

You will also be asked to check a box to confirm that your app honors a user's Limit Ad Tracking
setting in iOS. The Facebook SDK honors the iOS Limited Ad Tracking Setting. When a person enables
Limited Ad Tracking, Facebook only uses data obtained through the use of the Advertising Identifier
for "Limited Advertising Purposes" as defined by the iOS Developer Program License Agreement. Please
make sure to check this box when prompted.

For more information, see [Facebook Issue #242477629268301](https://developers.facebook.com/bugs/242477629268301/) and
[TIMODOPEN-391](https://jira-archive.titaniumsdk.com/TIMODOPEN-391).


<a name="apis"></a>
## API Changes

<a name="new_apis"></a>
### New APIs

The following APIs are new or have expanded platform support in Release
3.3.0.

<table>
<tr><th>API</th><th>Type</th><th>Notes</th></tr>
  <tr><td>Titanium.Android.ActionBar.setDisplayShowHomeEnabled</td><td>method</td><td><p>Shows or
hides the action bar home icon (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Android.ActionBar.setDisplayShowTitleEnabled</td><td>method</td><td><p>Shows or
hides the action bar title/subtitle (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.App.Android.appVersionCode</td><td>property</td><td><p>The version number of the
application. 
 (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.App.Android.appVersionName</td><td>property</td><td><p>The version name of the
application. 
 (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.App.Android.getAppVersionCode</td><td>method</td><td><p>Gets the value of the
appVersionCode property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.App.Android.getAppVersionName</td><td>method</td><td><p>Gets the value of the
appVersionName property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.App.Android.getLaunchIntent</td><td>method</td><td><p>Gets the value of the
launchIntent property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.App.Android.launchIntent</td><td>property</td><td><p>Return the intent that was
used to launch the application. 
 (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.App.proximity</td><td>event</td><td><p>Fired when the proximity sensor changes
state. (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.App.proximityDetection</td><td>property</td><td><p>Determines whether proximity
detection is enabled. (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.App.proximityState</td><td>property</td><td><p>Indicates the state of the
device's proximity sensor, according to the 
Titanium.App.proximity event.
 (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.Database.ResultSet.fieldCount</td><td>property</td><td><p>The number of columns
in this result set. (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Media.AudioPlayer.getTime</td><td>method</td><td><p>Gets the value of the time
property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Media.AudioPlayer.setTime</td><td>method</td><td><p>Sets the value of the time
property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Media.AudioPlayer.time</td><td>property</td><td><p>Current playback position of
the audio. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.Media.CAMERA_FLASH_AUTO</td><td>property</td><td><p>Constant specifying to have
the device determine to use the flash or not. (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.Media.CAMERA_FLASH_OFF</td><td>property</td><td><p>Constant specifying to never
fire the flash. (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.Media.CAMERA_FLASH_ON</td><td>property</td><td><p>Constant specifying to always
fire the flash. (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.Media.cameraFlashMode</td><td>property</td><td><p>Determines how the flash is
fired when using the device's camera. (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.Media.saveToPhotoGallery</td><td>method</td><td><p>Saves media to the device's
photo gallery / camera roll. (Added support for Android.)</p></td></tr>
  <tr><td>Titanium.Network.Cookie</td><td>object</td><td><p>Cookie object used to manage the system
cookie store and HTTP client cookie store. (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.HTTPClient.getSecurityManager</td><td>method</td><td><p>Gets the value of
the securityManager property. (New API, supported on iPad, iPhone and Android.)</p></td></tr>
  <tr><td>Titanium.Network.HTTPClient.securityManager</td><td>property</td><td><p>The Security
Manager for this client. (New API, supported on iPad, iPhone and Android.)</p></td></tr>
  <tr><td>Titanium.Network.addHTTPCookie</td><td>method</td><td><p>Adds a cookie to the HTTP client
cookie store.
 (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.allHTTPCookies</td><td>property</td><td><p>A list of all cookies in the
cookie storage. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.createCookie</td><td>method</td><td><p>Creates and returns an instance of
Titanium.Network.Cookie. (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.getAllHTTPCookies</td><td>method</td><td><p>Gets the value of the
allHTTPCookies property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.getHTTPCookies</td><td>method</td><td><p>Gets all the cookies with the
domain, path and name matched with the given values from the HTTP client cookie store.
 (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.getHTTPCookiesForDomain</td><td>method</td><td><p>Gets all the cookies
with the domain matched with the given values from the HTTP client cookie store.
 (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.removeAllHTTPCookies</td><td>method</td><td><p>Removes all the cookies
from the HTTP client cookie store.
 (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.removeHTTPCookie</td><td>method</td><td><p>Removes the cookie with the
domain, path and name exactly the same as the given values from the HTTP client cookie store.
 (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Network.removeHTTPCookiesForDomain</td><td>method</td><td><p>Removes the cookies
with the domain matched with the given values from the HTTP client cookie store.
 (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.Proxy.appyProperties</td><td>method</td><td><p>Applies the properties to the
proxy. (Added support for BlackBerry.)</p></td></tr>
  <tr><td>Titanium.UI.Label.getIncludeFontPadding</td><td>method</td><td><p>Gets the value of the
includeFontPadding property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.Label.includeFontPadding</td><td>property</td><td><p>Includes extra top and
bottom padding to make room for accents that go above normal ascent and descent. (New API, supported
on Android.)</p></td></tr>
  <tr><td>Titanium.UI.Label.setIncludeFontPadding</td><td>method</td><td><p>Sets the value of the
includeFontPadding property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.ListView.footerDividersEnabled</td><td>property</td><td><p>When set to false,
the ListView will not draw the divider before the footer view. (New API, supported on
Android.)</p></td></tr>
  <tr><td>Titanium.UI.ListView.getFooterDividersEnabled</td><td>method</td><td><p>Gets the value of
the footerDividersEnabled property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.ListView.getHeaderDividersEnabled</td><td>method</td><td><p>Gets the value of
the headerDividersEnabled property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.ListView.headerDividersEnabled</td><td>property</td><td><p>When set to false,
the ListView will not draw the divider after the header view. (New API, supported on
Android.)</p></td></tr>
  <tr><td>Titanium.UI.ListView.noresults</td><td>event</td><td><p>Fired when the search using either
searchView or searchText has no results. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.ScrollableView.moveNext</td><td>method</td><td><p>Sets the current page to the
next consecutive page in Titanium.UI.ScrollableView.views.
 (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.ScrollableView.movePrevious</td><td>method</td><td><p>Sets the current page to
the previous consecutive page in Titanium.UI.ScrollableView.views.
 (Added support for iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.getOnTintColor</td><td>method</td><td><p>Gets the value of the
onTintColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.getThumbTintColor</td><td>method</td><td><p>Gets the value of the
thumbTintColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.getTintColor</td><td>method</td><td><p>Gets the value of the tintColor
property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.onTintColor</td><td>property</td><td><p>The color used to tint the
appearance of the switch when it is turned on. (New API, supported on iPhone and
iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.setOnTintColor</td><td>method</td><td><p>Sets the value of the
onTintColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.setThumbTintColor</td><td>method</td><td><p>Sets the value of the
thumbTintColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.setTintColor</td><td>method</td><td><p>Sets the value of the tintColor
property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.thumbTintColor</td><td>property</td><td><p>The color used to tint the
appearance of the thumb. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Switch.tintColor</td><td>property</td><td><p>The color used to tint the
outline of the switch when it is turned off. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.getNavTintColor</td><td>method</td><td><p>Gets the value of the
navTintColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.getTitle</td><td>method</td><td><p>Gets the value of the title
property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.getTitleAttributes</td><td>method</td><td><p>Gets the value of the
titleAttributes property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.getTranslucent</td><td>method</td><td><p>Gets the value of the
translucent property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.navTintColor</td><td>property</td><td><p>The tintColor to apply to
the navigation bar (typically for the <strong>More</strong> tab). This property is applicable on iOS
7 and greater. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.setNavTintColor</td><td>method</td><td><p>Sets the value of the
navTintColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.setTitle</td><td>method</td><td><p>Sets the value of the title
property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.setTitleAttributes</td><td>method</td><td><p>Sets the value of the
titleAttributes property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.setTranslucent</td><td>method</td><td><p>Sets the value of the
translucent property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.title</td><td>property</td><td><p>Title for this tabGroup. (New API,
supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.titleAttributes</td><td>property</td><td><p>Title text attributes of
the window to be applied on the <strong>More</strong> tab. (New API, supported on iPhone and
iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TabGroup.translucent</td><td>property</td><td><p>Boolean value indicating if
the nav bar (typically for the <strong>More</strong> tab), is translucent. (New API, supported on
iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TableView.filterAnchored</td><td>property</td><td><p>Determines whether the
search is limited to the start of the string (New API, supported on Android, iPhone and
iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TableView.footerDividersEnabled</td><td>property</td><td><p>When set to false,
the ListView will not draw the divider before the footer view. (New API, supported on
Android.)</p></td></tr>
  <tr><td>Titanium.UI.TableView.getFilterAnchored</td><td>method</td><td><p>Gets the value of the
filterAnchored property. (New API, supported on Android, iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TableView.getFooterDividersEnabled</td><td>method</td><td><p>Gets the value of
the footerDividersEnabled property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.TableView.getHeaderDividersEnabled</td><td>method</td><td><p>Gets the value of
the headerDividersEnabled property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.TableView.headerDividersEnabled</td><td>property</td><td><p>When set to false,
the ListView will not draw the divider after the header view. (New API, supported on
Android.)</p></td></tr>
  <tr><td>Titanium.UI.TableView.setFilterAnchored</td><td>method</td><td><p>Sets the value of the
filterAnchored property. (New API, supported on Android, iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.TextArea.getSelection</td><td>method</td><td><p>Gets the value of the
selection property. (New API, supported on iPhone, iPad and Android.)</p></td></tr>
  <tr><td>Titanium.UI.TextArea.selection</td><td>property</td><td><p>Returns the currently selected
text of the text area. (New API, supported on iPhone, iPad and Android.)</p></td></tr>
  <tr><td>Titanium.UI.TextField.getSelection</td><td>method</td><td><p>Gets the value of the
selection property. (New API, supported on iPhone, iPad and Android.)</p></td></tr>
  <tr><td>Titanium.UI.TextField.selection</td><td>property</td><td><p>Returns the currently selected
text of the text field. (New API, supported on iPhone, iPad and Android.)</p></td></tr>
  <tr><td>Titanium.UI.View.clipMode</td><td>property</td><td><p>View's clipping behavior. (New API,
supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.getClipMode</td><td>method</td><td><p>Gets the value of the clipMode
property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.getPullBackgroundColor</td><td>method</td><td><p>Gets the value of the
pullBackgroundColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.getViewShadowColor</td><td>method</td><td><p>Gets the value of the
viewShadowColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.getViewShadowOffset</td><td>method</td><td><p>Gets the value of the
viewShadowOffset property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.getViewShadowRadius</td><td>method</td><td><p>Gets the value of the
viewShadowRadius property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.pullBackgroundColor</td><td>property</td><td><p>Background color of the
wrapper view when this view is used as either Titanium.UI.ListView.pullView or
Titanium.UI.TableView.headerPullView. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.View.removeAllChildren</td><td>method</td><td><p>Removes all child views from
this view's hierarchy. (Added support for BlackBerry.)</p></td></tr>
  <tr><td>Titanium.UI.View.setClipMode</td><td>method</td><td><p>Sets the value of the clipMode
property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.setPullBackgroundColor</td><td>method</td><td><p>Sets the value of the
pullBackgroundColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.setViewShadowColor</td><td>method</td><td><p>Sets the value of the
viewShadowColor property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.setViewShadowOffset</td><td>method</td><td><p>Sets the value of the
viewShadowOffset property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.setViewShadowRadius</td><td>method</td><td><p>Sets the value of the
viewShadowRadius property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.viewShadowColor</td><td>property</td><td><p>Determines the color of the
shadow. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.viewShadowOffset</td><td>property</td><td><p>Determines the offset for
the shadow of the view. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.View.viewShadowRadius</td><td>property</td><td><p>Determines the blur radius
used to create the shadow. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.WebView.getHandlePlatformUrl</td><td>method</td><td><p>Gets the value of the
handlePlatformUrl property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.WebView.handlePlatformUrl</td><td>property</td><td><p>Lets the webview handle
platform supported urls (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.WebView.setHandlePlatformUrl</td><td>method</td><td><p>Sets the value of the
handlePlatformUrl property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.WebView.sslerror</td><td>event</td><td><p>Fired when an SSL error occurred.
(New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.Window.flagSecure</td><td>property</td><td><p>Treat the content of the window
as secure, preventing it from appearing in screenshots or from being viewed on non-secure displays.
 (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.Window.getFlagSecure</td><td>method</td><td><p>Gets the value of the
flagSecure property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.Window.getLeftNavButtons</td><td>method</td><td><p>Gets the value of the
leftNavButtons property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Window.getRightNavButtons</td><td>method</td><td><p>Gets the value of the
rightNavButtons property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Window.getWindowFlags</td><td>method</td><td><p>Gets the value of the
windowFlags property. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.Window.leftNavButtons</td><td>property</td><td><p>An Array of views to show in
the left nav bar area. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Window.rightNavButtons</td><td>property</td><td><p>An Array of views to show
in the right nav bar area. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Window.setLeftNavButtons</td><td>method</td><td><p>Sets the value of the
leftNavButtons property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Window.setRightNavButtons</td><td>method</td><td><p>Sets the value of the
rightNavButtons property. (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.Window.windowFlags</td><td>property</td><td><p>Additional flags to set on the
Activity Window. (New API, supported on Android.)</p></td></tr>
  <tr><td>Titanium.UI.iOS.CLIP_MODE_DEFAULT</td><td>property</td><td><p>Use with
Titanium.UI.View.clipMode to specify clipping behavior.
 (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.iOS.CLIP_MODE_DISABLED</td><td>property</td><td><p>Use with
Titanium.UI.View.clipMode to specify clipping behavior.
 (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.iOS.CLIP_MODE_ENABLED</td><td>property</td><td><p>Use with
Titanium.UI.View.clipMode to specify clipping behavior.
 (New API, supported on iPhone and iPad.)</p></td></tr>
  <tr><td>Titanium.UI.iOS.Toolbar.extendBackground</td><td>property</td><td><p>If <code>true</code>,
the background of the toolbar extends upwards. (New API, supported on iPhone and
iPad.)</p></td></tr>
  <tr><td>Titanium.UI.iOS.Toolbar.getExtendBackground</td><td>method</td><td><p>Gets the value of
the extendBackground property. (New API, supported on iPhone and iPad.)</p></td></tr>
<tr>
</table>

<a name="deprecated_apis"></a>
### Deprecated APIs

The following APIs are deprecated in Release 3.3.0.

<table>
<tr><th>API</th><th>Type</th><th>Notes</th></tr>
  <tr><td>Titanium.include</td><td>method</td><td><p>Create a CommonJS module and use the require method to include external JavaScript.</p></td></tr>
  <tr><td>Titanium.Network.HTTPClient.addKeyManager</td><td>method</td><td><p>Use the securityManager property instead.</p></td></tr>
  <tr><td>Titanium.Network.HTTPClient.addTrustManager</td><td>method</td><td><p>Use the securityManager property instead.</p></td></tr>
  <tr><td>Titanium.UI.View.enabled</td><td>property</td><td><p>This is deprecated on Android. Use touchEnabled property instead.</p></td></tr>
  <tr><td>Titanium.UI.View.getEnabled</td><td>method</td><td></td></tr>
  <tr><td>Titanium.UI.View.setEnabled</td><td>method</td><td></td></tr>
<tr>
</table>

<a name="removed_apis"></a>
### Removed APIs

The following APIs have been removed in Release 3.3.0.

<table>
<tr><th>API</th><th>Type</th><th>Notes</th></tr>
  <tr><td>Titanium.Analytics.addEvent</td><td>method</td><td></td></tr>
  <tr><td>Titanium.Analytics.settingsEvent</td><td>method</td><td></td></tr>
  <tr><td>Titanium.Analytics.timedEvent</td><td>method</td><td></td></tr>
  <tr><td>Titanium.Analytics.userEvent</td><td>method</td><td></td></tr>
  <tr><td>Titanium.Database.ResultSet.fieldCount</td><td>method</td><td><p>Use the fieldCount property instead.</p></td></tr>
<tr>
</table>



