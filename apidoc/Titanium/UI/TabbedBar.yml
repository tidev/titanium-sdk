---
name: Titanium.UI.TabbedBar

summary: A button bar that maintains a selected state.
description: |
    A tabbed bar is a button bar that
    maintains a state (visually distinguished as a pressed or selected look).
    It is closely related to the `ButtonBar` control. See the description of 
    [ButtonBar](Titanium.UI.ButtonBar) for information on styling tabbed bars and buttons
    bars.
    
    Use the <Titanium.UI.createTabbedBar> method to create a Tabbed Bar.
extends: Titanium.UI.View
platforms: [iphone, ipad, android, macos]
since: {iphone: "0.8", ipad: "0.8", android: "8.0.0"}
excludes:
    events: [ 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'dblclick',
        'doubletap', 'longclick', 'singletap', 'swipe', 'twofingertap' ]
    properties: [children]
    methods: [add, remove, removeAllChildren, replaceAt]

events: 
  - name: click
    summary: Fired when a button is clicked.
    properties: 
      - name: index
        summary: Index of the clicked button. 
        type: Number
properties:
  - name: index
    summary: Index of the currently selected button.
    type: Number
  - name: labels
    summary: Array of labels for the tabbed bar. 
    description: |
        The labels can be specified either using an array of strings, in which case
        each string defines the title for a button, or using an array of simple
        dictionary objects, <BarItemType>, which can specify title, image, width and 
        enabled state for each button.
    type: [Array<String>, Array<BarItemType>]
  - name: style
    summary: Style of the tabbed bar.
    description: |
        Specify one of the constants:
        For iOS: 
        [Titanium.UI.iOS.SystemButtonStyle](Titanium.UI.iOS.SystemButtonStyle),
        either `PLAIN`, `BORDERED`, or `BAR`.
        
        The `BAR` style specifies a more compact style and allows the bar's background
        color or gradient to show through.
        For Android:
        [Titanium.UI.TABS_STYLE_*]
        In Android [style](Titanium.UI.TabbedBar.style) is only supported in the creation dictionary 
        of the proxy.
    type: Number
    default: Titanium.UI.iOS.SystemButtonStyle.PLAIN for iOS, Ti.UI.TABS_STYLE_DEFAULT for Android
examples:
  - title: Simple Tabbed Bar with 3 items
    example: |
        ``` js
        var bb1 = Ti.UI.createTabbedBar({
          labels: ['One', 'Two', 'Three'],
          backgroundColor: '#336699',
          style: Ti.UI.iOS.SystemButtonStyle.BAR,
          width: 200,
          height: 25,
          top: 50
        });
        win.add(bb1);
        ```

  - title: TabGroup like behavior for views instead of windows
    example: |
        ``` js
        var win = Ti.UI.createWindow({ layout: 'vertical' });
        var tabbedBar = Ti.UI.createTabbedBar({
            labels: ['One', 'Two', 'Three'],
            backgroundColor: '#336699',
            height: '10%',
            width: Ti.UI.FILL
        });
        var scrollView = Ti.UI.createScrollView({
            scrollingEnabled: false,
            height: '90%',
            scrollType: 'horizontal',
            layout: 'horizontal'
        });

        for (i = 0; i < tabbedBar.labels.length; i++) {
            scrollView.add( Ti.UI.createView({ backgroundColor: '#'+Math.random().toString(16).substr(-6)}))
        }

        tabbedBar.addEventListener('click', function(e) {
            scrollView.scrollTo(e.index * win.rect.width, 0, {animated: true});
        })

        win.add(scrollView);
        win.add(tabbedBar);
        win.open();
        ```
