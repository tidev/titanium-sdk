---
name: Titanium.UI.iOS.TabbedBar
summary: A button bar that maintains a selected state.
description: |
    A `TabbedBar` is a `ButtonBar` that maintains its state (visually distinguished as a pressed or 
    selected look). See [ButtonBar](Titanium.UI.ButtonBar) for information on styling both tabbed bars and buttons bars.

    You create a `TabbedBar` with the <Titanium.UI.iOS.createTabbedBar> factory method, or **`<TabbedBar>`** Alloy element.
extends: Titanium.UI.View
platforms: [iphone, ipad, macos]
since: {iphone: "0.8", ipad: "0.8", macos: "9.2.0"}
excludes:
    events: [ 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'dblclick', 
        'doubletap', 'longclick', 'singletap', 'swipe', 'twofingertap' ]
    properties: [children]
    methods: [add, remove, removeAllChildren, replaceAt]
deprecated:
    since: "8.0.0"
    notes: Use [Titanium.UI.TabbedBar](Titanium.UI.TabbedBar) instead.
    removed: "10.0.0"

events: 
  - name: click
    summary: Fired when a button is clicked.
    properties: 
      - name: index
        summary: Index of the clicked button. 
        type: Number

properties:
  - name: index
    summary: Index of the currently selected button.
    type: Number
  - name: labels
    summary: Array of labels for the tabbed bar. 
    description: |
        The labels can be specified either using an array of strings, in which case each string 
        defines the title for a button, or using an array of simple dictionary objects, 
        <BarItemType>, which can specify title, image, width and enabled state for each button.
    type: [Array<String>, Array<BarItemType>]
    
  - name: style
    summary: Style of the tabbed bar.
    description: |
        The `BAR` style specifies a more compact style and allows the bar's background color or 
        gradient to show through.
    type: Number
    constants: Titanium.UI.iOS.SystemButtonStyle.*
    default: Titanium.UI.iOS.SystemButtonStyle.PLAIN

examples:
  - title: Simple Tabbed Bar with 3 items
    example: |
        Create a tabbed bar with 3 items.
        
        ``` js
        var bb1 = Titanium.UI.iOS.createTabbedBar({
          labels:['One', 'Two', 'Three'],
          backgroundColor:'#336699',
          top:50,
          style:Titanium.UI.iOS.SystemButtonStyle.PLAIN,
          height:25,
          width:200
        });
        win.add(bb1);
        ```

  - title: Alloy XML Markup
    example: |
        Previous example as an Alloy view.

        ``` xml
        <Alloy>
            <Window id="win">
                <TabbedBar id="bb1" platform="ios" backgroundColor="#369" top="50" height="25" width="200">

                    <!-- The Labels tag sets the TabbedBar.labels property. -->
                    <Labels>

                        <!-- Specify text with node text or the title attribute. -->
                        <!-- Can also specify the enabled, image and width attributes. -->

                        <Label>One</Label>
                        <Label>Two</Label>
                        <Label>Three</Label>

                    </Labels>

                    <!-- Place additional views for the TabbedBar here. -->

                </TabbedBar>
            </Window>
        </Alloy>
        ```

---
name: BarItemType
summary: Object describing a button bar or tabbed bar item.
description: |
    A button bar or tabbed bar item can have an image or a title, but not both. 
    Buttons with images and buttons with text can be mixed in the same bar, however. 
    
    If both `image` and `title` properties are specified for a given item, the `image` property 
    takes precedence and the `title` property is ignored.
properties:
  - name: title
    summary: Button title, used if no `image` is specified.
    type: String
    
  - name: image
    summary: Button icon. If specified, takes precedence over `title`.
    type: [String, Titanium.Blob, Titanium.Filesystem.File]
    
  - name: width
    summary: Width for this button. 
    type: Number
    
  - name: enabled
    summary: Whether the button is enabled initially.
    type: Boolean
    default: true

  - name: accessibilityLabel
    summary: A succint label associated with the bar item for the device's accessibility service.
    description: |
        See <Titanium.UI.View.accessibilityLabel> description.
    platforms: [iphone, ipad, macos]
    since: {iphone: "3.0.0", ipad: "3.0.0", macos: "9.2.0"}
    type: String
