---
name: Titanium.UI.iOS.Stepper
summary: |
    A widget used to increment and decrement a value.
description: |
    | Default | Custom |
    | ------- | ------ |
    | ![Stepper](./stepper.png) | ![Custom](./stepper_custom.png) |

    A Stepper displays its selected state while it is being pressed.
    You can specify background images for each state on iOS.
    Use the <Titanium.UI.iOS.createStepper> method or a **`<Stepper>`** Alloy element to create a stepper
    (see the "Examples" section details).

    * When assigning a custom image to the `backgroundImage` property, the image must be
    partially or wholly transparent for the background color or background gradient to be visible.
    * Similarly, for an assigned background gradient to show through, the `backgroundColor` may need to be
    set to 'transparent'.

    * Note that the stepper cannot be re-sized.
extends: Titanium.UI.View
platforms: [iphone, ipad, macos]
since: {iphone: "5.4.0", ipad: "5.4.0", macos: "9.2.0"}
excludes:
    events: [doubletap, focus, keypressed, longclick, longpress, pinch, postlayout,
             singletap, swipe, twofingertap]
    properties: [children]
    methods: [add, remove, removeAllChildren, replaceAt]
properties:
  - name: enabled
    summary: Determines if the stepper is enabled or disabled.
    type: Boolean

  - name: value
    summary: The current value of the stepper.
    type: Number

  - name: continuous
    summary: |
        If YES, value change events are sent immediately when the value changes during user interaction.
        If NO, a value change event is sent when user interaction ends.
        The default value is YES.
    type: Boolean

  - name: autorepeat
    summary: |
        If YES, the user pressing and holding on the stepper repeatedly alters value.
        The default value is YES.
    type: Boolean

  - name: wraps
    summary: |
        If YES, incrementing beyond <Titanium.UI.iOS.Stepper.maximum> sets value to <Titanium.UI.iOS.Stepper.minimum>. likewise, decrementing below
        <Titanium.UI.iOS.Stepper.minimum> sets value to <Titanium.UI.iOS.Stepper.maximum>. If NO, the stepper does not increment beyond <Titanium.UI.iOS.Stepper.maximum> nor
        does it decrement below <Titanium.UI.iOS.Stepper.minimum> but rather holds at those values.
        The default value is NO.
    type: Boolean

  - name: minimum
    summary: |
        The minimum value the stepper will be set to, the value must be smaller than the maximum value.
        If you attempt to set a value equal to or greater than maximum, the system will default the
        value to 0.
    type: Number

  - name: maximum
    summary: |
        The maximum value the stepper will be set to, the value must be greater than the minimum value.
        If you attempt to set a value equal to or lower than minimum, the system will default the
        value to 100.
    type: Number

  - name: steps
    summary: |
        The value the stepper will increment and decrement by, default value for this property is 1. When setting
        a new value, it must be greater than 1.
    type: Number

  - name: tintColor
    summary: Sets the color for the widget, any backgroundImages added will be set to the same color.
    description: |
        For information about color values, see the "Colors" section of <Titanium.UI>.
    type: [String, Titanium.UI.Color]

  - name: backgroundImage
    summary: |
        Background image for the stepper in its normal state, specified as a local file path or URL.
    description: |
        Also sets the background image for other stepper states (focused, selected),
        unless they've been specified explicitly. On iOS, if backgroundDisabledImage is unset, the
        image will appear faded to indicate being disabled. Also on iOS, if backgroundSelectedImage
        is unset, the image will be darkened to indicate being selected.
    type: String

  - name: decrementImage
    summary: |
        Background image for the stepper decrement button in its normal state, specified as a local
        file path or URL.
    description: |
        Also sets the background image for the other stepper states (disabled, focused, selected),
        unless they've been specified explicitly, except for iOS, which requires a backgroundImage.
    type: String

  - name: decrementDisabledImage
    summary: |
        Background image for the stepper decrement button in its disabled state, specified as a local
        file path or URL. The decrement button enters a disabled state ones the value is equal to the
        minimumValue , setting the enabled property to false will have no effect to decrement button state.
    type: String


  - name: incrementImage
    summary: |
        Background image for the stepper increment button in its normal state, specified as a local
        file path or URL.
    description: |
        Also sets the background image for the other stepper states (disabled, focused, selected),
        unless they've been specified explicitly, except for iOS, which requires a backgroundImage.
    type: String

  - name: incrementDisabledImage
    summary: |
        Background image for the stepper increment button in its disabled state, specified as a local
        file path or URL.The increment button enters a disabled state ones the value is equal to the
        maximumValue , setting the enabled property to false will have no effect to increment button state.
    type: String

events:
  - name: change
    summary: Fired every time the stepper value changes.
    properties:
      - name: value
        summary: The current value of the stepper.
        type: Number
      - name: minimum
        summary: The minimum value of the stepper.
        type: Number
      - name: maximum
        summary: The maximum value of the stepper.
        type: Number

examples:
  - title: Simple Stepper Example
    example: |
        ``` js
        var win = Ti.UI.createWindow({
            backgroundColor: '#fff'
        });

        var stepper = Ti.UI.iOS.createStepper({
            tintColor: "green",
            steps: 3,
            maximum: 30,
            minimum: 0
        });

        stepper.addEventListener("change", function(e) {
            Ti.API.info(e.value);
        });

        win.add(stepper);
        win.open();
        ```

  - title: Alloy XML Markup
    example: |
        Previous example as an Alloy view.

        stepper.xml:
        ``` xml
        <Alloy>
            <Window id="window">
                <Stepper id="stepper" onClick="doClick" tintColor="green" steps="3" />
            </Window>
        </Alloy>
        ```

        stepper.js:
        ``` js
        function doClick(e) {
            alert(e.value);
        }

        $.window.open();
        ```
