---
name: Titanium.UI.Clipboard
summary: A module used for accessing clipboard data.
description: |
    The Clipboard is a temporary data store, used to save a single item of data that may then
    be accessed by the user using UI copy and paste interactions within an app or between apps.

    On iOS, the module's `setData()` and `getData()` methods enable multiple representations of the
    same data item to be stored together with their respective
    [MIME type](http://en.wikipedia.org/wiki/Internet_media_type) to describe their format. For
    example, `'text'` and `'text/plain'` for text, and `'image/jpg'` and `'image/png'` for an image.
    iOS Will report back the type of data representation in `getItems()` as 
    [Universal Type Identifiers](https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html).

    When working with text, either of the `getData()`/`setData()` methods may be used with a `'text/plain'` type, or
    the `getText()`/`hasText()`/`setText()` methods without the need to specify the type.

    Android currently only supports text data to be stored.

    #### Clipboard Data Types

    The `getText()`/`hasText()`/`setText()` methods are equivalent to calling `getData()`/`setData()` with a `'text'` or `'text/plain'`
    type. These work with plain Unicode strings.

    An image is stored using the `'image'` type, or an explicit image MIME type, and is returned as
    a <Titanium.Blob> (binary) type.

    A URL is stored with the `'url'` or `'text/uri-list'` type, and is returned as a string.

    Any data type that is specified but not correctly mapped to a clipboard type by the system is
    retrieved as a <Titanium.Blob> type.
extends: Titanium.Module
platforms: [android, iphone, ipad, macos]
since: {android: "1.8.0", iphone: "1.5.0", ipad: "1.5.0", macos: "9.2.0"}
methods:
  - name: clearData
    summary: |
        Deletes data of the specified MIME type stored in the clipboard. If MIME type omitted, all
        data is deleted.
    description: On Android, identical to the `clearText()` method.
    parameters:
      - name: type
        summary: MIME type. Ignored on Android.
        type: String
        optional: true

  - name: clearText
    summary: Deletes all text data stored in the clipboard.
    description: |
        This method deletes any data saved using the `setText` method, or that has a `text` or
        `text/plain` MIME type.

  - name: getData
    summary: Gets data of the specified MIME type stored in the clipboard. Returns null if non-text mimetype on Android.
    returns:
        type: [String, Titanium.Blob]
    parameters:
      - name: type
        summary: MIME type. Must be 'text' or 'text/plain' on Android, or else null is returned.
        type: String

  - name: getText
    summary: Gets text data stored in the clipboard.
    returns:
        type: String

  - name: hasData
    summary: Indicates whether any data of the specified MIME type is stored in the clipboard.
    returns:
        type: Boolean
    parameters:
      - name: type
        summary: MIME type. Must be 'text' or 'text/plain' on Android (or it will return false).
        type: String
        optional: true

  - name: hasText
    summary: Indicates whether any text data is stored in the clipboard.
    returns:
        type: Boolean

  - name: hasURLs
    summary: Indicates whether any URLs are stored in the clipboard.
    osver: {ios: {min: "10.0"}}
    platforms: [iphone, ipad, macos]
    since: {iphone: "6.0.0", ipad: "6.0.0", macos: "9.2.0"}
    returns:
        type: Boolean

  - name: hasImages
    summary: Indicates whether any images are stored in the clipboard.
    osver: {ios: {min: "10.0"}}
    platforms: [iphone, ipad, macos]
    since: {iphone: "6.0.0", ipad: "6.0.0", macos: "9.2.0"}
    returns:
        type: Boolean

  - name: hasColors
    summary: Indicates whether any colors are stored in the clipboard.
    osver: {ios: {min: "10.0"}}
    platforms: [iphone, ipad, macos]
    since: {iphone: "6.0.0", ipad: "6.0.0", macos: "9.2.0"}
    returns:
        type: Boolean

  - name: setData
    summary: Stores data of the specified MIME type in the clipboard.
    description: |
        This method will overwrite any existing data for the specified MIME type.

        Note that the clipboard is intended to store only one item of data at a time. This method
        enables different representations/formats of a data item to be saved.
    parameters:
      - name: type
        summary: |
            MIME type. Must be 'text' or 'text/plain' on Android.
            Possible types include: `'text', 'text/plain', 'color', 'image', 'url', 'text/uri-list'`.
            iOS also supports [Universal Type Identifiers](https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html)
        type: String

      - name: data
        summary: New item of data.
        type: [Object, String, Titanium.Blob, Titanium.Filesystem.File, Titanium.UI.Color]

  - name: setText
    summary: Stores text data in the clipboard.
    description: This method will overwrite any existing text data.
    parameters:
      - name: text
        summary: New item of data.
        type: String

  - name: setItems
    summary: Adds an array of items to a clipboard, and sets privacy options for all included items.
    description: |
        You can pass multiple options to the options object. Note that this API is mime-type based.
        The key must be a valid mime-type and the value must be the value that matches the given
        mime-type. If no valid mime-type is provided a a key, receiving items with
        <Titanium.UI.Clipboard.getItems> will crash the app. See the below example for more information
        on the usage.
    parameters:
      - name: items
        type: ClipboardItemsType
        summary: |
            An array of key-value items to add to the clipboard. The key must a valid mime-type
            matching the mime-type of the value.
    osver: {ios: {min: "10.0"}}
    platforms: [iphone, ipad, macos]
    since: {iphone: "5.5.0", ipad: "5.5.0", macos: "9.2.0"}

  - name: getItems
    summary: Gets the items that have been specified earlier using <Titanium.UI.Clipboard.setItems>.
    description: |
        The returned Array contains simple Objects whose keys are the reported
        [Universal Type Identifiers](https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html)
        reported by iOS; and values are the underlying object/data.
    returns:
        - type: Array<Dictionary>
    osver: {ios: {min: "10.0"}}
    platforms: [iphone, ipad, macos]
    since: {iphone: "5.5.0", ipad: "5.5.0", macos: "9.2.0"}

  - name: remove
    summary: Removes the clipboard.
    since: "6.1.0"
    platforms: [iphone, ipad, macos]

properties:
  - name: name
    summary: Create a new named clipboard.
    description: Create a new clipboard with a given name. See the example on how to use this.
    since: "6.1.0"
    platforms: [iphone, ipad, macos]
    availability: creation
    type: String

  - name: unique
    summary: Create a new clipboard identified by a unique system-generated name.
    description: |
        Create a new clipboard identified by a unique system-generated name.
        See the example on how to use this.
    since: "6.1.0"
    platforms: [iphone, ipad, macos]
    availability: creation
    type: Boolean

  - name: allowCreation
    summary: Create a clipboard identified by name if it doesn't exist.
    description: |
        If "create" is false, it will return the existing named clipboard but will
        not create new one.
        If "create" is true, it will return the existing clipboard (if exists). Otherwise
        it will create new clipboard with given name.
    since: "6.1.0"
    platforms: [iphone, ipad, macos]
    availability: creation
    type: Boolean

examples:
  - title: Copy Text to the Clipboard
    example: |
        Clear the clipboard and output the resulting empty clipboard to console.

        Then, store the string, "hello", to the clipboard and output it from the clipboard to the
        console.

        ``` js
        Ti.API.info('Deleting all text in Clipboard');
        Ti.UI.Clipboard.clearText();
        Ti.API.info('Clipboard.getText(): ' + Ti.UI.Clipboard.getText()); // returns empty string on Android and undefined on iOS
        Ti.API.info('Set text Clipboard to hello');
        Ti.UI.Clipboard.setText('hello');
        Ti.API.info('Clipboard.hasText(), should be true: ' + Ti.UI.Clipboard.hasText()); // returns true on Android and 1 on iOS
        Ti.API.info('Clipboard.getText(), should be hello: ' + Ti.UI.Clipboard.getText());
        ```

  - title: Set multiple items including privacy options (iOS 10 and later)
    example: |
        The items are represented as an array that holds different objects of key-value items. Optionally,
        you can set privacy options described in `Ti.UI.CLIPBOARD_OPTION_*`. Note that you can not have the
        same two keys in one object and the key must match a valid mime-type. If no valid mime-type is specified

        ``` js
        var win = Ti.UI.createWindow({
            backgroundColor: "#fff"
        });

        var btn1 = Ti.UI.createButton({
            title: "Set clipboard items",
            top: 40
        });

        var btn2 = Ti.UI.createButton({
            title: "Get clipboard items",
            top: 80
        });

        btn1.addEventListener("click", function () {
          const options = {};
          options[Ti.UI.CLIPBOARD_OPTION_LOCAL_ONLY] = true;
          options[Ti.UI.CLIPBOARD_OPTION_EXPIRATION_DATE] = new Date(2030, 4, 20);

            Ti.UI.Clipboard.setItems({
              items: [{
                  "text/plain": "John",
              },{
                  "text/plain": "Doe"
              }],
              options
          });
        });

        btn2.addEventListener("click", function () {
            alert(Ti.UI.Clipboard.getItems());
        });

        win.add(btn1);
        win.add(btn2);
        win.open();
        ```

  - title: Use of named clipboard in iOS
    example: |
        ``` js
        var clipboard1 = Ti.UI.createClipboard({
            name: 'myClipboard',
            allowCreation: true
        });
        clipboard1.setText('hello');

        var clipboard2 = Ti.UI.createClipboard({
            name: 'myClipboard'
        });

        Ti.API.info('Clipboard name is: ' + clipboard1.name);
        Ti.API.info('Both clipboards should return "hello"');
        Ti.API.info('clipboard1.getText() ' + clipboard1.getText());
        Ti.API.info('clipboard2.getText() ' + clipboard2.getText());
        ```

  - title: Use of unique named clipboard in iOS
    example: |
        ``` js
        var clipboard = Ti.UI.createClipboard({
            unique: true
        });
        clipboard.setText('hello');

        Ti.API.info('clipboard name is: ' + clipboard.name);
        Ti.API.info('clipboard.getText() ' + clipboard.getText());
        ```

---
name: ClipboardItemsType
summary: Dictionary describing the items for <Titanium.UI.Clipboard.setItems>.
properties:
  - name: items
    summary: |
        An array of key-value items to add to the clipboard. The key must a valid mime-type
        matching the mime-type of the value.
        Alterntaively, iOS supports using [Universal Type Identifiers](https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html)
    type: Array<Dictionary>

  - name: options
    summary: |
        The privacy options to apply to all the items on the clipboard. The available options are
        described in `Ti.UI.CLIPBOARD_OPTION_*`. Depending on the key, the value can be a Date or
        Boolean.
    type: Dictionary
