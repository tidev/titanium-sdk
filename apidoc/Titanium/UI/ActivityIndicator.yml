---
name: Titanium.UI.ActivityIndicator
summary: An activity indicator that lets the user know an action is taking place.
description:  |
    | Android | iOS | Windows |
    | ------- | --- | ------- |
    | ![Android](./activityindicator_android.png) | ![iOS](./activityindicator_ios.png) | ![Windows](./activityindicator_wp.png) |

    An activity indicator can be used to show the progress of an operation in the UI to let the
    user know that some action is taking place. An activity indicator consists of a spinning
    animation and an optional text message, and is used to indicate an ongoing activity of
    indeterminate length. To show progress, use <Titanium.UI.ProgressBar> instead.

    Use the <Titanium.UI.createActivityIndicator> method or **`<ActivityIndicator>`** Alloy element to
    create an `ActivityIndicator` object.

    `ActivityIndicator` is a view and, like any view, must be added to a window or other top-level
    view before it can be shown. Unlike most views, `ActivityIndicator` is hidden by
    default and must be shown explicitly by calling its <Titanium.UI.ActivityIndicator.show> method.
extends: Titanium.UI.View
since: "0.8"
excludes:
    events: [click, dblclick, doubletap, focus, keypressed, longclick, longpress, pinch, postlayout,
             singletap, swipe, touchcancel, touchend, touchmove, touchstart, twofingertap]
    methods: [add, remove, replaceAt, animate, convertPointToView, removeAllChildren, toImage]
    properties: [accessibilityHidden,accessibilityHint,accessibilityLabel,accessibilityValue,
                 anchorPoint,animatedCenter, backgroundColor,backgroundDisabledColor,
                 backgroundDisabledImage,backgroundFocusedColor,backgroundFocusedImage,backgroundGradient,
                 backgroundImage,backgroundLeftCap,backgroundRepeat,backgroundSelectedColor,
                 backgroundSelectedImage,backgroundTopCap,borderColor,borderRadius,borderWidth,center,
                 children,clipMode,focusable,horizontalWrap,keepScreenOn,layout,opacity,overrideCurrentAnimation,
                 pullBackgroundColor,rect,size,softKeyboardOnFocus,tintColor,touchEnabled,transform,
                 viewShadowColor,viewShadowOffset,viewShadowRadius,visible,zIndex]

methods:
  - name: hide
    summary: Hides the activity indicator and stops the animation.

  - name: show
    summary: Shows the activity indicator and starts the animation.
    description: |
        Remember to add the activity indicator to a parent view first,
        so it centers properly. This is optional for Android and required
        for iOS.

properties:
  - name: bottom
    summary: Bottom position of the view.
    description: |
        Determines the absolute position of the view relative to its parent.

        Can be either a float value or a dimension string (for example `100` or `'50%'`.)
    type: [Number, String]

  - name: color
    summary: |
        Color of the message text, as a color name or hex triplet.
    description: |
        For information about color values, see the "Colors" section of <Titanium.UI>.
    type: [ String, Titanium.UI.Color ]

  - name: font
    summary: Font used for the message text.
    type: Font

  - name: height
    summary: |
        Width of the view. Only accepts value of <Titanium.UI.SIZE>, which must be explicitly set in order to
        display the message and to position the view correctly.
    type: String
    constants: Titanium.UI.SIZE

  - name: indicatorColor
    summary: Color of the animated indicator.
    description: For information about color values, see the "Colors" section of <Titanium.UI>.
    since: "2.1.0"
    type: [ String, Titanium.UI.Color ]
    default: "white"
    platforms: [iphone,ipad, android, macos]

  - name: left
    summary: Left position of the view.
    description: |
        Determines the absolute position of the view relative to its parent.

        Can be either a float value or a dimension string (for example `100` or `'50%'`.)
    type: [Number, String]

  - name: message
    summary: Message text.
    type: String

  - name: messageid
    summary: Key identifying a string in the locale file to use for the message text.
    description: Only one of `message` or `messageid` should be specified.
    type: String

  - name: right
    summary: Right position of the view.
    description: |
        Determines the absolute position of the view relative to its parent.

        Can be either a float value or a dimension string (for example `100` or `'50%'`.)
    type: [Number, String]

  - name: style
    summary: The style for the activity indicator.
    description: |
        One of the activity indicator style constants.

        See also: [indicatorColor](Titanium.UI.ActivityIndicator.indicatorColor)
    type: Number
    constants: Titanium.UI.ActivityIndicatorStyle.*
    default: <Titanium.UI.ActivityIndicatorStyle.PLAIN>

  - name: top
    summary: Top position of the view.
    description: |
        Determines the absolute position of the view relative to its parent.

        Can be either a float value or a dimension string (for example `100` or`'50%'`.)
    type: [Number, String]

  - name: width
    summary: |
        Width of the view. Only accepts value of <Titanium.UI.SIZE>, which must be explicitly set in order to
        display the message and to position the view correctly.
    type: String
    constants: Titanium.UI.SIZE

examples:
  - title: Simple Activity Indicator
    example: |
        Open a yellow window immediately after a blue window. Show an activity indicator while
        some code executes and hide it on completion. Then close the yellow window.

        ``` js
        Ti.UI.backgroundColor = 'white';

        var win1 = Ti.UI.createWindow({
          backgroundColor: 'blue'
        });

        var win2 = Ti.UI.createWindow({
          backgroundColor: 'yellow'
        });

        var activityIndicator = Ti.UI.createActivityIndicator({
          color: 'green',
          message: 'Loading ...',
          style: Ti.UI.ActivityIndicatorStyle.DARK,
          top: 10,
          left: 10,
          height: Ti.UI.SIZE,
          width: Ti.UI.SIZE
        });

        // The activity indicator must be added to a window or view for it to appear
        win2.add(activityIndicator);

        // eventListeners must always be loaded before the event is likely to fire
        // hence, the open() method must be positioned before the window is opened
        win2.addEventListener('open', function (e) {
          activityIndicator.show();
          // do some work that takes 6 seconds
          // ie. replace the following setTimeout block with your code
          setTimeout(function() {
            e.source.close();
            activityIndicator.hide();
          }, 6000);
        });

        win1.open();
        win2.open();
        ```

  - title: Alloy XML Markup
    example: |
        Previous example as two Alloy views.

        win1.xml:
        ``` xml
        <Alloy>
            <Window onOpen="openWin2" backgroundColor="blue" />
        </Alloy>
        ```

        win1.js:
        ``` js
        function openWin2 () {
            var win2 = Alloy.createController('win2').getView();
            win2.open();
        }
        ```

        win2.xml:
        ``` xml
        <Alloy>
            <Window onOpen="showIndicator" backgroundColor="yellow">
                <!-- Define the styling properties in the TSS file -->
                <ActivityIndicator id="activityIndicator" message="Loading..."/>
            </Window>
        </Alloy>
        ```

        win2.js:
        ``` js
        function showIndicator(e) {
            $.activityIndicator.show();
            // do some work that takes 6 seconds
            // ie. replace the following setTimeout block with your code
            setTimeout(function() {
                e.source.close();
                $.activityIndicator.hide();
            }, 6000);
        }
        ```
