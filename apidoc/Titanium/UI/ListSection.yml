---
name: Titanium.UI.ListSection
summary: A list section is a container within a list view used to organize list items.
description: |
    Use the <Titanium.UI.createListSection> method or **`<ListSection>`** Alloy element to create a `ListSection`.

    List sections are used to manipulate and organize list items contained within it. For examples 
    of using list sections, see the examples in <Titanium.UI.ListView> and <Titanium.UI.ListItem>.
platforms: [android, ipad, iphone, macos]
since: '3.1.0'
extends: Titanium.Proxy
excludes:
    methods: [addEventListener, fireEvent, removeEventListener]
    properties: [bubbleParent]
properties:
 
  - name: footerTitle
    summary: Title of this section footer.
    description: |
        Using this property and `footerView` together is not supported. Use one or the other.
    type: String

  - name: footerView
    summary: View to use for this section footer.
    description: |
        Using this property and `footerTitle` together is not supported. Use one or the other. 
        In Alloy you can specify this property with a `<FooterView>` child element of a `<ListSection>`
        element (see Examples).
    type: Titanium.UI.View
    since: 3.2.0
    platforms: [android, iphone, ipad, macos]

  - name: headerTitle
    summary: Title of this section header.
    description: |
        Using this property and `headerView` together is not supported. Use one or the other.
    type: String

  - name: headerView
    summary: View to use for this section header.
    description: |
        Using this property and `headerTitle` together is not supported. Use one or the other. 
        In Alloy you can specify this property with a `<HeaderView>` child element of a `<ListSection>`
        element (see Examples).
    type: Titanium.UI.View
    since: 3.2.0
    platforms: [android, iphone, ipad, macos]

  - name: items
    summary: Items of this list section.
    type: Array<ListDataItem>

  - name: itemCount
    summary: Returns the item count of the section.
    type: Number
    since: 9.3.0
    permission: read-only
    platforms: [android, iphone, ipad]

  - name: filteredItemCount
    summary: Returns the item count of the section, also incorporating the search filter if active.
    type: Number
    since: 9.3.0
    permission: read-only
    platforms: [android]

methods:

  - name: setItems
    summary: Sets the data entries in the list section.
    description: |
        On iOS, the list item(s) can be inserted with an animation by specifying the `animation` parameter.
    parameters:
      - name: dataItems
        summary: List items to set.
        type: Array<ListDataItem>

      - name: animation
        summary: Animation properties. (iOS only.)
        type: ListViewAnimationProperties
        optional: true

  - name: appendItems
    summary: Appends the data entries to the end of the list section.
    description: |
        On iOS, the list item(s) can be inserted with an animation by specifying the `animation` parameter.
    parameters:
      - name: dataItems
        summary: List items to add.
        type: Array<ListDataItem>

      - name: animation
        summary: Animation properties. (iOS only.)
        type: ListViewAnimationProperties
        optional: true

  - name: insertItemsAt
    summary: Inserts data entries to the list section at the specified index.
    description: |
        On iOS, the list item(s) can be inserted with an animation by specifying the `animation` parameter.
    parameters:
      - name: itemIndex
        summary: Index of where to insert the items.
        type: Number

      - name: dataItems
        summary: List items to insert.
        type: Array<ListDataItem>

      - name: animation
        type: ListViewAnimationProperties
        summary: Animation properties. (iOS only.)
        optional: true

  - name: replaceItemsAt
    summary: |
        Removes count entries from the list section at the specified index,
        then inserts data entries to the list section at the same index.
    description: |
        On iOS, the list item(s) can be replaced with an animation by specifying the `animation` parameter.
    parameters:
      - name: index
        summary: Index of where to remove then insert items.
        type: Number

      - name: count
        summary: Number of list items to remove.
        type: Number

      - name: dataItems
        summary: List items to insert.
        type: Array<ListDataItem>

      - name: animation
        summary: Animation properties. (iOS only.)
        type: ListViewAnimationProperties
        optional: true

  - name: deleteItemsAt
    summary: Removes count entries from the list section at the specified index.
    description: |
        On iOS, the list item(s) can be removed with an animation by specifying the `animation` parameter.
    parameters:
      - name: itemIndex
        summary: Index of where to remove items.
        type: Number

      - name: count
        summary: Number of items to remove.
        type: Number

      - name: animation
        summary: Animation properties. (iOS only.)
        type: ListViewAnimationProperties
        optional: true

  - name: getItemAt
    summary: Returns the item entry from the list view at the specified index.
    parameters:
      - name: itemIndex
        summary: Index of where to retrieve an item.
        type: Number
    returns:
      type: ListDataItem

  - name: updateItemAt
    summary: |
        Updates an item at the specified index.
    description: |
        On iOS, the list item can be updated with an animation by specifying the `animation` parameter.
    parameters:
      - name: index
        summary: Index of where to update the item.
        type: Number

      - name: dataItem
        summary: List item to update.
        type: ListDataItem

      - name: animation
        summary: Animation properties. (iOS only.)
        type: ListViewAnimationProperties
        optional: true

examples:
  - title: Alloy XML Markup
    example: |
        ListSection is supported by Alloy 1.2.0 and later.

        HeaderView and FooterView are supported on Alloy 1.3.0 and later.

        ``` xml
        <Alloy>
            <Window fullscreen="true">
                <ListView>
                    <ListSection>

                        <!-- Sets ListSection's headerView property -->
                        <HeaderView>
                            <View backgroundColor="#DDD" height="Ti.UI.SIZE">
                                <Label>Fruits</Label>
                            </View>>
                        </HeaderView>

                        <ListItem title="Apple" />
                        <ListItem title="Orange" />
                        <ListItem title="Pear" />

                        <!-- Sets ListSection's footerView property -->
                        <FooterView>
                            <View backgroundColor="#DDD" height="Ti.UI.SIZE">
                                <Label>3 items</Label>
                            </View>

                        </FooterView>
                    </ListSection>
                </ListView>
            </Window>
        </Alloy>
        ```
