---
name: Titanium.UI
summary: The main <Titanium.UI> module.
description:  |
    The UI module is responsible for native user-interface components and interaction inside
    Titanium.  The goal of the UI module is to provide a native experience along with native
    performance by compiling Javascript code into their native counterparts as part of the
    build process.

    #### Design

    The UI module is broken down into 3 major area:

    * **Views** - [Views](Titanium.UI.View) are containers that host visual elements such as
    controls or other views.  Views can have their properties customized, such as their border color
    and radius, can fire events such as swipe events or touches, and can optionally contain a
    hierarchy or other views as children. In Titanium, most views are specialized to perform both a
    visual function and set of interaction behaviors such as [Table View](Titanium.UI.TableView) or
    [Coverflow View](Titanium.UI.iOS.CoverFlowView).  Views are always named with the suffix `View`.

    * **Controls** - controls, or sometimes referred as widgets, are visual elements such as
    [sliders](Titanium.UI.Slider),  [buttons](Titanium.UI.Button) and [switches](Titanium.UI.Switch).
    They provide a visual element which has a defined behavior and typical have special
    configuration and special events.  Controls themselves are views and also inherit a views
    properties, functions and events.

    * **Windows** - [Windows](Titanium.UI.Window) are typically top-level visual constructs that are
    the main part of your interface. An application will always have at least one window and windows
    can take different shapes and sizes, can have display and interaction properties such as
    fullscreen or modal and can be customized, such as changing their opacity or background color.
    Windows themselves are views and also inherit a views properties, functions and events. There
    are a few specialization of Windows such as a [Tab Group](Titanium.UI.TabGroup) which offer
    additional behavior beyond the basic Window. It is considered a best practice to use a
    [NavigationWindow](Titanium.UI.NavigationWindow) as the root of your application.

    Titanium uses the [Factory Pattern](http://en.wikipedia.org/wiki/Factory_method_pattern) for
    constructing objects and a general naming pattern for APIs.  For example, to construct a
    [Alert Dialog](Titanium.UI.AlertDialog), you call the method <Titanium.UI.createAlertDialog>.
    To create a [TextArea](Titanium.UI.TextArea), you call the method <Titanium.UI.createTextArea>.
    Once an object is created, it will be available until it goes out of scope.

    #### Optimizations

    UI objects are optimized by Titanium to not be realized into the drawing context and placed into
    the device UI surface until needed.  That means that you can create UI objects, set their
    properties and add them to their hierarchy without much worry about memory or performance.
    When the native drawing surface needs to render a specific view or control, Titanium will
    automatically create the view as needed.  Additionally, Titanium is optimized to also release
    memory once the view is no longer needed, on screen or in low memory situations.  However, it's
    a good idea to help Titanium along in certain cases where you are no longer using objects.  For
    example, you should call `close` on a [Window](Titanium.UI.Window) instance when you are no
    longer using it.  You can safely call `open` on the window again to re-open it.

    #### Global Context

    Prior to the release of Titanium SDK `9.0.0.GA` any variable declared in `app.js` or `alloy.js`
    was added to a global scope. This however is no longer the case since `9.0.0.GA`. However
    it is still possible to add variables to a global scope by adding `global.` in front of any
    variabled declared in `app.js` or `alloy.js`. However you should be careful with adding variables
    to global context because anything added to the global context will not be garbage-collected.

    In Alloy the recommended way to add global context is `Alloy.Globals`.

    #### Portability

    Titanium components are designed to be portable across as many platforms as it supports.
    However, there are cases where a device either does not support a specific feature or capability
    or where it support additional functionality. For cases where the device OS supports
    capabilities that other platforms do not, we attempt to place those capabilities in a separate
    namespace, such as <Titanium.UI.iOS>. However, in cases where the control is in a common
    namespace and support additional features, we continue to place that functionality directly on
    the object.

    #### Events

    Event listeners must be defined before their respective events are likely to be fired, otherwise
    they are not guaranteed to be called. The open and focus [Window](Titanium.UI.Window) event
    listeners, for instance, must be defined before the window is opened.

    Evaluating events as late as possible while bearing the above consideration in mind, however,
    can significantly improve application responsiveness. For example, an event listener for a
    click event may be defined after the parent window has been opened.

    Adding `eventListeners` in Alloy makes sure they are bound before they are fired.

    #### Colors

    Many UI components have properties that control their color.

    Colors may be specified as a hex triplet to determine the red, green and blue channels. Thus,
    `'#000000'` is specified for black, `'#ff0000'` for red, `'#00ff00'` for green, `'#0000ff'` for
    blue, and `'#ffffff'` for white, etc. A channel may be abbreviated when its two hex digits are
    identical, such as `'#000'`, `'#f00'`, `'#0f0#'`, `'#00f'` and `'#fff'` for the above colors,
    respectively.

    An additional alpha channel is supported as a prefix to the hex triplet (ARGB or AARRGGBB). So, to make
    the purple-like color `'#ff00ff'` semi-opaque, you could use an alpha value of `'55'`, giving,
    `'#55ff00ff'` or `'#5f0f'`. Please note that both iOS and Android use ARGB format, while typical CSS supports RGBA.

    Note that while the pound symbol, `#`, is not mandatory on iOS when using the hex triplet format,
    it is recommended to include it to provide compatibility with other platforms.

    iOS and Android also accept colors specified in the form, `rgb(R,G,B)` and `rgba(R,G,B,A)`, with the color
    channels inside the parethesis represented by integer numbers between `0` and `255` and the
    alpha channel by a float number between `0` and `1.0` (transparent to opaque, respectively).
    For example, an opaque purple could be obtained using `'rgb(255,0,255)'` and a semi-opaque purple
    using `'rgba(255,0,255,0.3)'`. Note that although this format will work if the `rgb` or `rgba`
    prefix is omitted, this is not officially supported and thus not recommended.

    Alternatively, the following set of color names are recognized.

    `'aqua'`, `'black'`, `'blue'`, `'brown'`, `'cyan'`, `'darkgray'`, `'fuchsia'`, `'gray'`,
    `'green'`, `'lightgray'`, `'lime'`, `'magenta'`, `'maroon'`, `'navy'`, `'olive'`, `'orange'`,
    `'pink'`, `'purple'`, `'red'`, `'silver'`, `'teal'`, `'white'`, `'yellow'`.

    All color properties also accept a value of `'transparent'`.

    On Android, if you want to create a semi-transparent window, set the `opacity`
    property **before** opening the window.

    On iOS, you can set a global tinting using <Titanium.UI.tintColor>. All child views will inherit
    the tint color by default and are able to override the color using `tintColor` on their own views.
    The default `tintColor` on iOS is the blue (system-color).

    If a color property is undefined, the default color of the particular UI element is applied.
    If a color value is not valid on iOS, the default color is applied, whereas, on Android, the
    color yellow is applied.

    On iOS, you may use named system colors. See the <Titanium.UI.Color> documentation for more details.

    #### Dark Mode

    In iOS 13 Apple introduced support for users to adopt a system-wide Dark Mode setting where the screens, view, menus, and controls use a darker color palette. You can read more about this in the Apple Human Interface Guidelines.

    There are two aspects to dark mode that can be specified for your app, colors and images.

    ##### Specifying Dark Mode colors

    To specify colors for dark mode, also known as semantic colors, first create a file called `semantic.colors.json` in the Resources directory for classic applications, or in the assets directory for Alloy applications. Then you can specify color names in the following format:

    ``` json
      {
        "textColor": { // the name for your color
          "dark": {
            "color": "#ff85e2", // hex color code to be set
            "alpha": "50" // can be set from a range of 0.0-100.0, integer or float
          },
          "light": "#ff1f1f" // can be a hex color (with alpha via ARGB/AARRGGBB)
        }
      }
    ```

    To reference these colors in your application use the <Titanium.UI.fetchSemanticColor> API, this is a cross platform API that on iOS 13 and above will use the native method that checks the users system-wide setting, and in all other instances will check the <Titanium.UI.semanticColorType> property and return the correct color for the current setting.

    You may also directly use the named of the colors as values to any color properties on UI elements.

    ##### Specifying Dark Mode images

    Note: Dark Mode images are iOS only.

    To specify dark mode images, use the `-dark` suffix on the image name. When building your app the images are set as the dark mode variant, then refer to images as normal and iOS will select the correct image dependent on the users system-wide setting.

    For example given an image `logo.png` with `@2x` and `@3x` variants, the following dark mode images should exist:

      * logo-dark.png
      * logo-dark@2x.png
      * logo-dark@3x.png

    And you would reference the image as before using `logo-dark.png`
extends: Titanium.Module
since: "0.4"
platforms: [android, iphone, ipad, macos]
events:
  - name: userinterfacestyle
    summary: Fired when the `userInterfaceStyle` changes.
    properties:
      - name: value
        summary: The new userInterfaceStyle value.
        type: Number
        constants: Titanium.UI.USER_INTERFACE_STYLE_*
    osver: {ios: {min: "13.0"}}

methods:
  - name: create2DMatrix
    summary: Creates and returns an instance of <Titanium.UI.2DMatrix>.
    returns:
        type: Titanium.UI.2DMatrix
    parameters:
      - name: parameters
        summary: Initial transformation of the matrix.
        type: Matrix2DCreationDict
        optional: true
    deprecated:
        since: "8.0.0"
        notes: Use [Titanium.UI.createMatrix2D](Titanium.UI.createMatrix2D) instead.

  - name: createMatrix2D
    summary: Creates and returns an instance of <Titanium.UI.Matrix2D>.
    returns:
        type: Titanium.UI.Matrix2D
    parameters:
      - name: parameters
        summary: Initial transformation of the matrix.
        type: Matrix2DCreationDict
        optional: true

  - name: create3DMatrix
    summary: Creates and returns an instance of <Titanium.UI.3DMatrix>.
    returns:
        type: Titanium.UI.3DMatrix
    parameters:
      - name: parameters
        summary: Initial transformation of the matrix.
        type: Matrix3DCreationDict
        optional: true
    deprecated:
        since: "8.0.0"
        notes: Use [Titanium.UI.createMatrix3D](Titanium.UI.createMatrix3D) instead.

  - name: createMatrix3D
    summary: Creates and returns an instance of <Titanium.UI.Matrix3D>.
    returns:
        type: Titanium.UI.Matrix3D
    parameters:
      - name: parameters
        summary: Initial transformation of the matrix.
        type: Matrix3DCreationDict
        optional: true

  - name: convertUnits
    summary: Converts one type of unit to another using the metrics of the main display.
    description: As this method does not support percentages, `0` is returned if they are specified.
    returns:
        type: Number
    since: "2.0.0"
    parameters:
      - name: convertFromValue
        summary: |
            Measurement and optional unit to convert from, i.e. 160, "120dip".  Percentages are
            not accepted.
        type: String

      - name: convertToUnits
        summary: Desired unit for the conversion result.
        type: Number
        constants: Titanium.UI.UNIT_*

  - name: fetchSemanticColor
    summary: |
        Fetches the correct color to be used with a UI element dependent on the users current dark mode setting on iOS 13 and above, or the [Titanium.UI.semanticColorType](Titanium.UI.semanticColorType) setting in other instances.
        Will return a valid string value to be used for color properties on Android. This may be a hex string or an `rgba()` function.
    parameters:
      - name: colorName
        summary: Name of the semantic color defined in the applications colorset.
        type: String
    returns:
      - type: Titanium.UI.Color
      - type: String
    since: "8.2.0"

properties:
  - name: ANIMATION_CURVE_EASE_IN
    summary: |
        Use with [Animation.curve](Titanium.UI.Animation.curve) to specify an animation that starts
        slowly and speeds up.
    type: Number
    permission: read-only
    since: { android: "8.0.0", iphone: "0.9", ipad: "0.9" }

  - name: ANIMATION_CURVE_EASE_IN_OUT
    summary: |
        Use with [Animation.curve](Titanium.UI.Animation.curve) to specify an animation that starts
        slowly, and speeds up, then slows down at the end of the animation.
    type: Number
    permission: read-only
    since: { android: "8.0.0", iphone: "0.9", ipad: "0.9" }

  - name: ANIMATION_CURVE_EASE_OUT
    summary: |
        Use with [Animation.curve](Titanium.UI.Animation.curve) to specify an animation that starts
        quickly, then slows down at the end of the animation.
    type: Number
    permission: read-only
    since: { android: "8.0.0", iphone: "0.9", ipad: "0.9" }

  - name: ANIMATION_CURVE_LINEAR
    summary: |
        Use with [Animation.curve](Titanium.UI.Animation.curve) to specify an animation that proceeds
        at a constant rate.
    type: Number
    permission: read-only
    since: { android: "8.0.0", iphone: "0.9", ipad: "0.9" }

  - name: ATTRIBUTE_FONT
    summary: |
        Use with <Attribute.type> to specify a font.
    description: |
        Use a <Font> dictionary for <Attribute.value>.

        See <Attribute> for more information.
    type: Number
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_FOREGROUND_COLOR
    summary: |
        Use with <Attribute.type> to specify a font color.
    description: |
        Use a color name or hex value for <Attribute.value>.

        See <Attribute> for more information.
    type: Number
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_BACKGROUND_COLOR
    summary: |
        Use with <Attribute.type> to specify a background color.
    description: |
        Use a color name or hex value for <Attribute.value>.

        See <Attribute> for more information.
    type: Number
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_LIGATURE
    summary: |
        Use with <Attribute.type> to enable or disable ligatures.
    description: |
        Set <Attribute.value> to `1` to enable ligatures, else `0` to disable.
        Ligatures are only supported on certain fonts.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_LETTERPRESS_STYLE
    summary: |
        Use with <Attribute.value> to use a letterpress text effect.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_TEXT_EFFECT>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_KERN
    summary: |
        Use with <Attribute.type> to specify kerning (space between characters).
    description: |
        Set <Attribute.value> to a float value specifying how many pixels to increase the character
        spacing.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_STRIKETHROUGH_STYLE
    summary: |
        Use with <Attribute.type> to place a horizontal line through the text.
    description: |
        Set the `value` property to a `Titanium.UI.ATTRIBUTE_UNDERLINE_*` constant.

        See <Attribute> for more information.
    type: Number
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINES_STYLE
    summary: |
        Use with <Attribute.type> to place a horizontal line under the text.
    description: |
        Set the `value` property to a `Titanium.UI.ATTRIBUTE_UNDERLINE_*` constant.

        See <Attribute> for more information.
    type: Number
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_SUPERSCRIPT_STYLE
    summary: |
        Use with <Attribute.type> to place the text in an upper position.
    description: |
        See <Attribute> for more information.
    type: Number
    platforms: [android]
    since: "6.1.0"
    permission: read-only

  - name: ATTRIBUTE_SUBSCRIPT_STYLE
    summary: |
        Use with <Attribute.type> to place the text in a lower position.
    description: |
        See <Attribute> for more information.
    type: Number
    platforms: [android]
    since: "6.1.0"
    permission: read-only

  - name: ATTRIBUTE_STROKE_COLOR
    summary: |
        Use with <Attribute.type> to specify a color for the stroke text.
    description: |
        Use a color name or hex value for the `value` property in the attributes dictionary.

        See <Attribute> for more information on type modes.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_PARAGRAPH_STYLE
    summary: |
        Use with <Attribute.type> to manages the behaviour of string set.
    description: |
        Use <ParagraphAttribute> for the 'value' property in the attribute dictionary.
        Range for this should be whole string.
        See <Attribute> for more information on type modes.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "7.5.0"
    permission: read-only

  - name: ATTRIBUTE_STROKE_WIDTH
    summary: |
        Use with <Attribute.type> to specify the width of the stroke text.
    description: |
        Set <Attribute.value> to a float value specifying the size of stroke width as a percentage of the
        font size. A positive value displays an outline of the charater, while a negative value
        fills the character.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_SHADOW
    summary: |
        Use with <Attribute.type> to display a shadow behind the text.
    description: |
        Set <Attribute.value> to a [Shadow](shadowDict) dictionary.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_WRITING_DIRECTION
    summary: |
        Use with <Attribute.type> to control the direction of the text.
    description: |
        Set <Attribute.value> to a `Titanium.UI.ATTRIBUTE_WRITING_DIRECTION_*` constant.

        See <Attribute> for more information on type modes.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_TEXT_EFFECT
    summary: |
        Use with <Attribute.type> to apply a text effect.
    description: |
        Set <Attribute.value> to `Titanium.UI.ATTRIBUTE_LETTERPRESS_STYLE` to apply a
        letterpress effect to the text.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_LINK
    summary: |
        Use with <Attribute.type> to create a link.
    description: |
        Set <Attribute.value> to a URL.

        Use the Label's [link](Titanium.UI.Label.link) event to determine when the user triggers a
        long press (not a click) event on the linked text.

        See <Attribute> for more information.
    type: Number
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_BASELINE_OFFSET
    summary: |
        Use with <Attribute.type> to apply a different baseline to the text.
    description: |
        Set <Attribute.value> to a number to specify how many pixels to raise or lower the text.

        See <Attribute> for more information.
    type: Number
    since: {iphone: "3.6.0", ipad: "3.6.0", android: "7.0.0"}
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_COLOR
    summary: |
        Use with <Attribute.type> to change the color of the horizontal line.
    description: |
        Use a color name or hex value for <Attribute.value>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_STRIKETHROUGH_COLOR
    summary: |
        Use with <Attribute.type> to change the color of the horizontal line.
    description: |
        Use a color name or hex value for <Attribute.value>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_OBLIQUENESS
    summary: |
        Use with <Attribute.type> to skew the text.
    description: |
        Set <Attribute.value> to a float value to specify how much to skew the text.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_EXPANSION
    summary: |
        Use with <Attribute.type> to stretch the text horizontally.
    description: |
        Set <Attribute.value> to a float value to specify how much to stretch the text.

        For iOS, the default value is 0.0 and has no minimum/maximum range specified.
        For Windows, the default value is 0.0 and the valid range is between 0.5 and 1.0.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_LINE_BREAK
    deprecated:
        since: "7.5.0"
        notes: Use [ParagraphAttribute.lineBreakMode](ParagraphAttribute.lineBreakMode) instead.
    summary: |
        Use with <Attribute.type> to wrap and truncate the text.
    description: |
        Set <Attribute.value> to a `Titanium.UI.ATTRIBUTE_LINE_BREAK_*` constant.

        See <Attribute> for more information on type modes.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "5.0.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_STYLE_NONE
    summary: |
        Use with <Attribute.value> to not draw a line.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_STYLE_SINGLE
    summary: |
        Use with <Attribute.value> to draw a single line.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "6.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_STYLE_THICK
    summary: |
        Use with <Attribute.value> to draw a thick line.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_STYLE_DOUBLE
    summary: |
        Use with <Attribute.value> to draw a double line.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_PATTERN_SOLID
    summary: |
        Use with <Attribute.value> to draw a solid line.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_PATTERN_DOT
    summary: |
        Use with <Attribute.value> to draw a dotted line.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_PATTERN_DASH
    summary: |
        Use with <Attribute.value> to draw a dashed line.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT
    summary: |
        Use with <Attribute.value> to draw an alternating line of dashes and dots.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_PATTERN_DASH_DOT_DOT
    summary: |
        Use with <Attribute.value> to draw an alternating line of dashes and two dots.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_UNDERLINE_BY_WORD
    summary: |
        Use with <Attribute.value> to draw a line only underneath or through words.
    description: |
        Use this constant when <Attribute.type> is either
        <Titanium.UI.ATTRIBUTE_UNDERLINES_STYLE> or
        <Titanium.UI.ATTRIBUTE_STRIKETHROUGH_STYLE>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_WRITING_DIRECTION_EMBEDDING
    summary: |
        Use with <Attribute.value> to use the embedded text direction.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_WRITING_DIRECTION>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_WRITING_DIRECTION_OVERRIDE
    summary: |
        Use with <Attribute.value> to override the text direction.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_WRITING_DIRECTION>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_WRITING_DIRECTION_NATURAL
    summary: |
        Use with <Attribute.value> to use the
        [Unicode Bidirection Algorithm rules P2 and P3](http://www.unicode.org/reports/tr9/#The_Paragraph_Level)
        to determine which direction to use.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_WRITING_DIRECTION>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_WRITING_DIRECTION_LEFT_TO_RIGHT
    summary: |
        Use with <Attribute.value> to write text left to right.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_WRITING_DIRECTION>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_WRITING_DIRECTION_RIGHT_TO_LEFT
    summary: |
        Use with <Attribute.value> to write text right to left.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_WRITING_DIRECTION>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "3.6.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_LINE_BREAK_BY_WORD_WRAPPING
    summary: |
        Use with <Attribute.value> to wrap words at word boundaries.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_LINE_BREAK>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "5.0.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_LINE_BREAK_BY_CHAR_WRAPPING
    summary: |
        Use with <Attribute.value> to wrap words at word boundaries.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_LINE_BREAK>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "5.0.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_LINE_BREAK_BY_CLIPPING
    summary: |
        Use with <Attribute.value> to set lines to not draw past the edge of the text container.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_LINE_BREAK>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "5.0.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_HEAD
    summary: |
        Use with <Attribute.value> to use ellipsis glyph at the beginning of the line for missing text.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_LINE_BREAK>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "5.0.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_MIDDLE
    summary: |
        Use with <Attribute.value> to use ellipsis glyph at the middle of the line for missing text.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_LINE_BREAK>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "5.0.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: ATTRIBUTE_LINE_BREAK_BY_TRUNCATING_TAIL
    summary: |
        Use with <Attribute.value> to use ellipsis glyph at the end of the line for missing text.
    description: |
        Use this constant when <Attribute.type> is
        <Titanium.UI.ATTRIBUTE_LINE_BREAK>.

        See <Attribute> for more information.
    type: Number
    platforms: [iphone, ipad, macos]
    since: "5.0.0"
    osver: {ios: {min: "7.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_USERNAME
    summary: Specifies the expectation of an account or login name.
    type: String
    since: "6.3.0"
    osver: {ios: {min: "11.0"}, android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_PASSWORD
    summary: Specifies the expectation of a password.
    type: String
    since: "6.3.0"
    osver: {ios: {min: "11.0"}, android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_NAME
    summary: Specifies the expectation of a name.
    type: String
    since: "6.3.0"
    osver: {ios: {min: "10.0"}, android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_NAME_PREFIX
    summary: Specifies the expectation of a prefix or title, such as 'Dr.'
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_GIVEN_NAME
    summary: Specifies the expectation of a given name.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_MIDDLE_NAME
    summary: Specifies the expectation of a middle name.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_FAMILY_NAME
    summary: Specifies the expectation of a family name.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_NAME_SUFFIX
    summary: Specifies the expectation of a suffix, such as 'Jr.'
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_NICKNAME
    summary: Specifies the expectation of a nickname.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_JOB_TITLE
    summary: Specifies the expectation of a job title.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_ORGANIZATION_NAME
    summary: Specifies the expectation of an organization name.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_LOCATION
    summary: Specifies the expectation of a location, such as a point of interest, an address, or another way to identify a location.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_ADDRESS
    summary: Specifies the expectation of an address.
    type: String
    since: "6.3.0"
    osver: {ios: {min: "10.0"}, android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_ADDRESS_LINE1
    summary: Specifies the expectation of the first line of a street address.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_ADDRESS_LINE2
    summary: Specifies the expectation of the second line of a street address.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_ADDRESS_CITY
    summary: Specifies the expectation of a city name.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_ADDRESS_STATE
    summary: Specifies the expectation of a state name.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_ADDRESS_CITY_STATE
    summary: Specifies the expectation of a city name combined with a state name.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_SUBLOCALITY
    summary: Specifies the expectation of a sublocality.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_COUNTRY_NAME
    summary: Specifies the expectation of a country name.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_POSTAL_CODE
    summary: Specifies the expectation of a postal code.
    type: String
    since: "6.3.0"
    osver: {ios: {min: "10.0"}, android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_PHONE
    summary: Specifies the expectation of a telephone number.
    type: String
    since: "6.3.0"
    osver: {ios: {min: "10.0"}, android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_EMAIL
    summary: Specifies the expectation of an email address.
    type: String
    since: "6.3.0"
    osver: {ios: {min: "10.0"}, android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_URL
    summary: Specifies the expectation of a URL.
    type: String
    platforms: [iphone, ipad, macos]
    since: "6.3.0"
    osver: {ios: {min: "10.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_CARD_NUMBER
    summary: Specifies the expectation of a card number.
    type: String
    since: "6.3.0"
    osver: {ios: {min: "10.0"}, android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_CARD_SECURITY_CODE
    summary: Specifies the expectation of a card security code.
    type: String
    platforms: [android]
    since: "6.3.0"
    osver: {android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_CARD_EXPIRATION_DATE
    summary: Specifies the expectation of a card expiration date.
    type: String
    platforms: [android]
    since: "6.3.0"
    osver: {android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_CARD_EXPIRATION_DAY
    summary: Specifies the expectation of a card expiration day.
    type: String
    platforms: [android]
    since: "6.3.0"
    osver: {android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_CARD_EXPIRATION_MONTH
    summary: Specifies the expectation of a card expiration month.
    type: String
    platforms: [android]
    since: "6.3.0"
    osver: {android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_CARD_EXPIRATION_YEAR
    summary: Specifies the expectation of a card expiration year.
    type: String
    platforms: [android]
    since: "6.3.0"
    osver: {android: {min: "8.0"}}
    permission: read-only

  - name: AUTOFILL_TYPE_NEW_PASSWORD
    summary: Specifies the expectation of a new password.
    type: String
    platforms: [iphone, ipad, macos]
    since: "7.4.0"
    osver: { ios: { min: "12.0" } }
    permission: read-only

  - name: AUTOFILL_TYPE_ONE_TIME_CODE
    summary: Specifies the expectation of a single-factor SMS login code.
    type: String
    platforms: [iphone, ipad, macos]
    since: "7.4.0"
    osver: { ios: { min: "12.0" } }
    permission: read-only

  - name: AUTOLINK_MAP_ADDRESSES
    summary: Converts strings formatted as addresses into clickable links.
    description: |
         Two or more autolink constants can be combined using bitwise or.
         On iOS:
            Use with the <Titanium.UI.TextArea.autoLink> property.

         On Android:
            Use with <Titanium.UI.TextArea.autoLink>, <Titanium.UI.TextField.autoLink>, and <Titanium.UI.Label.autoLink> properties.

    type: Number
    osver: {ios: {min: "4.0"}}
    since: "3.0.0"
    permission: read-only

  - name: AUTOLINK_ALL
    summary: Converts all detectable types of data into clickable links.
    description: |
         Two or more autolink constants can be combined using bitwise or.
         On iOS:
            Use with the <Titanium.UI.TextArea.autoLink> property.

         On Android:
            Use with <Titanium.UI.TextArea.autoLink>, <Titanium.UI.TextField.autoLink>, and <Titanium.UI.Label.autoLink> properties.

    type: Number
    since: "3.0.0"
    permission: read-only

  - name: AUTOLINK_CALENDAR
    summary: Converts strings formatted as calendar events into clickable links.
    description: Use with the <Titanium.UI.TextArea.autoLink> property. Two or more autolink constants can be combined using bitwise or.
    type: Number
    osver: {ios: {min: "4.0"}}
    since: "3.0.0"
    permission: read-only
    platforms: [iphone, ipad, macos]

  - name: AUTOLINK_URLS
    summary: Converts strings formatted as URLs into clickable links.
    description: |
         Two or more autolink constants can be combined using bitwise or.
         On iOS:
            Use with the <Titanium.UI.TextArea.autoLink> property. This property will also convert strings formatted
            as email addresses into clickable links.

         On Android:
            Use with <Titanium.UI.TextArea.autoLink>, <Titanium.UI.TextField.autoLink>, and <Titanium.UI.Label.autoLink> properties.

    type: Number
    since: "3.0.0"
    permission: read-only

  - name: AUTOLINK_NONE
    summary: Disables converting strings into clickable links.
    description: |
         Two or more autolink constants can be combined using bitwise or.
         On iOS:
            Use with the <Titanium.UI.TextArea.autoLink> property.

         On Android:
            Use with <Titanium.UI.TextArea.autoLink>, <Titanium.UI.TextField.autoLink>, and <Titanium.UI.Label.autoLink> properties.

    type: Number
    permission: read-only
    since: "3.0.0"

  - name: AUTOLINK_PHONE_NUMBERS
    summary: Converts strings formatted as phone numbers into clickable links.
    description: |
         Two or more autolink constants can be combined using bitwise or.
         On iOS:
            Use with the <Titanium.UI.TextArea.autoLink> property.

         On Android:
            Use with <Titanium.UI.TextArea.autoLink>, <Titanium.UI.TextField.autoLink>, and <Titanium.UI.Label.autoLink> properties.

    type: Number
    permission: read-only
    since: "3.0.0"

  - name: AUTOLINK_EMAIL_ADDRESSES
    summary: Converts strings formatted as email addresses into clickable links.
    description: |
         Two or more autolink constants can be combined using bitwise or.
         On iOS:
            Use with the <Titanium.UI.TextArea.autoLink> property. This property will also convert strings formatted
            as URLs into clickable links.

         On Android:
            Use with <Titanium.UI.TextArea.autoLink>, <Titanium.UI.TextField.autoLink>, and <Titanium.UI.Label.autoLink> properties.

    type: Number
    permission: read-only
    since: "3.0.0"

  - name: BLEND_MODE_CLEAR
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_COLOR
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_COLOR_BURN
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_COLOR_DODGE
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_COPY
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_DARKEN
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_DESTINATION_ATOP
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_DESTINATION_IN
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_DESTINATION_OUT
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_DESTINATION_OVER
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_DIFFERENCE
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_EXCLUSION
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_HARD_LIGHT
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_HUE
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_LIGHTEN
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_LUMINOSITY
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_MULTIPLY
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_NORMAL
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_OVERLAY
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_PLUS_DARKER
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_PLUS_LIGHTER
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_SATURATION
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_SCREEN
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_SOFT_LIGHT
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"
    platforms: [iphone, ipad, macos]

  - name: BLEND_MODE_SOURCE_ATOP
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_SOURCE_IN
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_SOURCE_OUT
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BLEND_MODE_XOR
    summary: |
        Use with [MaskedImage.mode](Titanium.UI.MaskedImage.mode) to specify a blend mode.
    type: Number
    permission: read-only
    since: "7.3.0"

  - name: BUTTON_STYLE_FILLED
    summary: Use with [Button.style](Titanium.UI.Button.style) to show a solid filled button.
    description: |
        This is not supported on iOS and will show [BUTTON_STYLE_TEXT](Titanium.UI.BUTTON_STYLE_TEXT) instead.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: BUTTON_STYLE_OUTLINED
    summary: Use with [Button.style](Titanium.UI.Button.style) to show an unfilled rounded border button.
    description: |
        This is not supported on iOS and will show [BUTTON_STYLE_TEXT](Titanium.UI.BUTTON_STYLE_TEXT) instead.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: BUTTON_STYLE_TEXT
    summary: Use with [Button.style](Titanium.UI.Button.style) to show a text-only button without a background.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: BUTTON_STYLE_OPTION_POSITIVE
    summary: Use with [Button.style](Titanium.UI.Button.style) to show a positive themed accept button.
    description: |
        This is a text-only button without a background. It is intended to be used in conjunction with
        [BUTTON_STYLE_OPTION_NEGATIVE](Titanium.UI.BUTTON_STYLE_OPTION_NEGATIVE) and
        [BUTTON_STYLE_OPTION_NEUTRAL](Titanium.UI.BUTTON_STYLE_OPTION_NEUTRAL) to show an an accept button
        before closing a window or dialog such as "OK", "Yes", "Done", etc. It is typically colored
        differently than a [BUTTON_STYLE_TEXT](Titanium.UI.BUTTON_STYLE_TEXT) themed button on iOS.

        On Android, this can be customized by the `buttonBarPositiveButtonStyle` attribute.

        By default, the Android material theme does not style this button differently than any other
        text-only button. Only the holo theme will style it differently.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: BUTTON_STYLE_OPTION_NEGATIVE
    summary: Use with [Button.style](Titanium.UI.Button.style) to show a negative themed escape button.
    description: |
        This is a text-only button without a background. It is intended to be used in conjunction with
        [BUTTON_STYLE_OPTION_POSITIVE](Titanium.UI.BUTTON_STYLE_OPTION_POSITIVE) and
        [BUTTON_STYLE_OPTION_NEUTRAL](Titanium.UI.BUTTON_STYLE_OPTION_NEUTRAL) to show an
        escape button to exit a window or dialog such as "Cancel", "No", etc.

        This is not supported on iOS and will use [BUTTON_STYLE_TEXT](Titanium.UI.BUTTON_STYLE_TEXT) instead.

        On Android, this can be customized by the `buttonBarNegativeButtonStyle` attribute. By default,
        Android's built-in themes will style this button the same as
        [BUTTON_STYLE_OPTION_NEUTRAL](Titanium.UI.BUTTON_STYLE_OPTION_NEUTRAL) and
        [BUTTON_STYLE_TEXT](Titanium.UI.BUTTON_STYLE_TEXT).
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: BUTTON_STYLE_OPTION_NEUTRAL
    summary: Use with [Button.style](Titanium.UI.Button.style) to show a normal themed option button.
    description: |
        This is a text-only button without a background. It is intended to be used in conjunction with
        [BUTTON_STYLE_OPTION_POSITIVE](Titanium.UI.BUTTON_STYLE_OPTION_POSITIVE) and
        [BUTTON_STYLE_OPTION_NEGATIVE](Titanium.UI.BUTTON_STYLE_OPTION_NEGATIVE) to show
        a normal informational button.

        This is not supported on iOS and will use [BUTTON_STYLE_TEXT](Titanium.UI.BUTTON_STYLE_TEXT) instead.

        On Android, this can be customized by the `buttonBarNeutralButtonStyle` attribute. By default,
        Android's built-in themes will style this button the same as
        [BUTTON_STYLE_OPTION_NEGATIVE](Titanium.UI.BUTTON_STYLE_OPTION_NEGATIVE) and
        [BUTTON_STYLE_TEXT](Titanium.UI.BUTTON_STYLE_TEXT).
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: DATE_PICKER_STYLE_AUTOMATIC
    summary: |
        Displays a <Titanium.UI.Picker> using the best visual style on the current platform for date/time selection.
    description: |
        On Android and iOS, a picker with this style will be shown in compatct form,
        where the picker will be a read-only text field which opens a selection dialog when tapped on.

        Note: Prior to iOS 14, this property is only used on iOS Catalyst apps.
    type: Number
    permission: read-only
    since: "10.0.1"
    osver: { ios: { min: "13.4" } }

  - name: DATE_PICKER_STYLE_WHEELS
    summary: Displays a <Titanium.UI.Picker> as spinner wheels for date/time selection.
    type: Number
    permission: read-only
    since: "10.0.1"
    osver: { ios: { min: "13.4" } }

  - name: DATE_PICKER_STYLE_COMPACT
    summary: Displays a <Titanium.UI.Picker> as a read-only text field which opens a selection dialog when tapped on.
    description: "Note: Prior to iOS 14, this property is only used on iOS Catalyst apps."
    type: Number
    permission: read-only
    since: "10.0.1"
    osver: { ios: { min: "13.4" } }

  - name: DATE_PICKER_STYLE_INLINE
    summary: Displays a <Titanium.UI.Picker> as a large calendar or clock view for date/time selection.
    description: |
        On iOS, an inlined "time" picker will appear as a text field with spinners for hours and minutes.
    type: Number
    permission: read-only
    since: "10.0.1"
    osver: { ios: { min: "14.0" } }

  - name: HINT_TYPE_STATIC
    summary: |
        Use when creating a TextField to specify the hintType as static.
    type: Number
    permission: read-only
    platforms: [android]

  - name: HINT_TYPE_ANIMATED
    summary: |
        Use when creating a TextField to specify the hintType as animated.
    type: Number
    permission: read-only
    platforms: [android]

  - name: TEXT_ELLIPSIZE_TRUNCATE_WORD_WRAP
    summary: Add ellipses at word boundaries, unless the word itself doesn't fit on a single line.
    description: |
        One of the group of constants for the <Titanium.UI.Label.ellipsize> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "6.0.0"

  - name: TEXT_ELLIPSIZE_TRUNCATE_CHAR_WRAP
    summary: Add ellipses before the first character that doesnt fit.
    description: |
        One of the group of constants for the <Titanium.UI.Label.ellipsize> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "6.0.0"

  - name: TEXT_ELLIPSIZE_TRUNCATE_CLIP
    summary: Lines are simply not drawn past the edge of the text container.
    description: |
        One of the group of constants for the <Titanium.UI.Label.ellipsize> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "6.0.0"

  - name: TEXT_ELLIPSIZE_TRUNCATE_START
    summary: Add ellipses at the beginning of the label if the text is too large to fit.
    description: |
        One of the group of constants for the <Titanium.UI.Label.ellipsize> property.
    type: Number
    permission: read-only
    since: "4.1.0"

  - name: TEXT_ELLIPSIZE_TRUNCATE_MIDDLE
    summary: Add ellipses in the middle of the label if the text is too large to fit.
    description: |
        One of the group of constants for the <Titanium.UI.Label.ellipsize> property.
    type: Number
    permission: read-only
    since: "4.1.0"

  - name: TEXT_ELLIPSIZE_TRUNCATE_END
    summary: Add ellipses at the end of the label if the text is too large to fit.
    description: |
        One of the group of constants for the <Titanium.UI.Label.ellipsize> property.
    type: Number
    permission: read-only
    since: "4.1.0"

  - name: TEXT_ELLIPSIZE_TRUNCATE_MARQUEE
    summary: Turns on a marquee effect of the label if the text is too large to fit. (This requires <Titanium.UI.Label.focusable> to be true)
    description: |
        One of the group of constants for the <Titanium.UI.Label.ellipsize> property.
    type: Number
    permission: read-only
    platforms: [android]
    since: "4.1.0"

  - name: TEXT_ELLIPSIZE_TRUNCATE_NONE
    summary: Disables ellipsizing of the label. The text will be cut off if it is too long.
    description: |
        One of the group of constants for the <Titanium.UI.Label.ellipsize> property.
    type: Number
    permission: read-only
    platforms: [android]
    since: "6.0.0"

  - name: EXTEND_EDGE_TOP
    summary: Specifies that the top edge of the window can extend.
    description: |
        One of the group of constants for the <Titanium.UI.Window.extendEdges> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "3.1.3"

  - name: EXTEND_EDGE_BOTTOM
    summary: Specifies that the bottom edge of the window can extend.
    description: |
        One of the group of constants for the <Titanium.UI.Window.extendEdges> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "3.1.3"

  - name: EXTEND_EDGE_LEFT
    summary: Specifies that the left edge of the window can extend.
    description: |
        One of the group of constants for the <Titanium.UI.Window.extendEdges> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "3.1.3"

  - name: EXTEND_EDGE_RIGHT
    summary: Specifies that the right edge of the window can extend.
    description: |
        One of the group of constants for the <Titanium.UI.Window.extendEdges> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "3.1.3"

  - name: EXTEND_EDGE_NONE
    summary: Specifies that none of the edges of the window can extend.
    description: |
        One of the group of constants for the <Titanium.UI.Window.extendEdges> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "3.1.3"

  - name: EXTEND_EDGE_ALL
    summary: Specifies that all the edges of the window can extend.
    description: |
        One of the group of constants for the <Titanium.UI.Window.extendEdges> property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "3.1.3"

  - name: FACE_DOWN
    summary: Constant value for face-down orientation.
    description: |
        One of the group of orientation constants for the <Titanium.Gesture> module,
        <Titanium.UI.PORTRAIT>,
        <Titanium.UI.UPSIDE_PORTRAIT>,
        <Titanium.UI.LANDSCAPE_LEFT>,
        <Titanium.UI.LANDSCAPE_RIGHT>,
        <Titanium.UI.FACE_UP>,
        <Titanium.UI.FACE_DOWN>,
        and <Titanium.UI.UNKNOWN>.
    type: Number
    permission: read-only

  - name: FACE_UP
    summary: Constant value for face-up orientation.
    description: |
        One of the group of orientation constants for the <Titanium.Gesture> module,
        <Titanium.UI.PORTRAIT>,
        <Titanium.UI.UPSIDE_PORTRAIT>,
        <Titanium.UI.LANDSCAPE_LEFT>,
        <Titanium.UI.LANDSCAPE_RIGHT>,
        <Titanium.UI.FACE_UP>,
        <Titanium.UI.FACE_DOWN>,
        and <Titanium.UI.UNKNOWN>.
    type: Number
    permission: read-only

  - name: FILL
    summary: FILL behavior for UI layout.
    description: The FILL behavior means the view will grow its size to fill its parent.
    type: String
    permission: read-only
    since: "2.0.0"

  - name: HIDDEN_BEHAVIOR_GONE
    summary: Release free space when hiding an object.
    type: Number
    platforms: [android]
    since: "6.1.0"
    permission: read-only

  - name: HIDDEN_BEHAVIOR_INVISIBLE
    summary: Keeps free space when hiding an object.
    type: Number
    platforms: [android]
    since: "6.1.0"
    permission: read-only

  - name: INPUT_BORDERSTYLE_BEZEL
    summary: Use a bezel-style border on the input field.
    description: |
        Use with the <Titanium.UI.TextField.borderStyle> property.

        On Android, this can also be used by the <Titanium.UI.TextArea.borderStyle> property.

        Android does not support this style and will use
        [INPUT_BORDERSTYLE_LINE](Titanium.UI.INPUT_BORDERSTYLE_LINE) instead.
    type: Number
    permission: read-only

  - name: INPUT_BORDERSTYLE_LINE
    summary: Use a simple line border on the input field.
    description: |
        Use with the <Titanium.UI.TextField.borderStyle> property.

        On Android, this can also be used by the <Titanium.UI.TextArea.borderStyle> property.
    type: Number
    permission: read-only

  - name: INPUT_BORDERSTYLE_NONE
    summary: Use no border on the input field.
    description: |
        Use with the <Titanium.UI.TextField.borderStyle> property.

        On Android, this can also be used by the <Titanium.UI.TextArea.borderStyle> property.
    type: Number
    permission: read-only

  - name: INPUT_BORDERSTYLE_ROUNDED
    summary: Use a rounded-rectangle border on the input field.
    description: |
        Use with the <Titanium.UI.TextField.borderStyle> property.

        On Android, this can also be used by the <Titanium.UI.TextArea.borderStyle> property.
    type: Number
    permission: read-only

  - name: INPUT_BORDERSTYLE_UNDERLINED
    summary: Show an underline instead of a border around the input field.
    description: |
        Use with the <Titanium.UI.TextField.borderStyle> and <Titanium.UI.TextArea.borderStyle> properties.

        iOS does not support this style and will use
        [INPUT_BORDERSTYLE_LINE](Titanium.UI.INPUT_BORDERSTYLE_LINE) instead.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: INPUT_BORDERSTYLE_FILLED
    summary: Show an enclosed border with a filled background on the input field.
    description: |
        This is the default Android material theme on Android.

        Use with the <Titanium.UI.TextField.borderStyle> and <Titanium.UI.TextArea.borderStyle> properties.

        iOS does not support this style and will use
        [INPUT_BORDERSTYLE_BEZEL](Titanium.UI.INPUT_BORDERSTYLE_BEZEL) instead.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: INPUT_BUTTONMODE_ALWAYS
    summary: Always show buttons on the input field.
    description: |
        Use with the <Titanium.UI.TextField.clearButtonMode>,
        <Titanium.UI.TextField.leftButtonMode>,
        and <Titanium.UI.TextField.rightButtonMode> properties.
    type: Number
    permission: read-only

  - name: INPUT_BUTTONMODE_NEVER
    summary: Never show buttons on the input field.
    description: |
        Use with the <Titanium.UI.TextField.clearButtonMode>,
        <Titanium.UI.TextField.leftButtonMode>,
        and <Titanium.UI.TextField.rightButtonMode> properties.
    type: Number
    permission: read-only

  - name: INPUT_BUTTONMODE_ONBLUR
    summary: Show buttons on the input field when it loses focus.
    description: |
        Use with the <Titanium.UI.TextField.clearButtonMode>,
        <Titanium.UI.TextField.leftButtonMode>,
        and <Titanium.UI.TextField.rightButtonMode> properties.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]

  - name: INPUT_BUTTONMODE_ONFOCUS
    summary: Show buttons on the input field when it gains focus.
    description: |
        Use with the <Titanium.UI.TextField.clearButtonMode>,
        <Titanium.UI.TextField.leftButtonMode>,
        and <Titanium.UI.TextField.rightButtonMode> properties.
    type: Number
    permission: read-only

  - name: INPUT_TYPE_CLASS_NUMBER
    summary: Use a keyboard with a number pad only, with the pad keyboard layout. Accepts only numbers.
    description: |
        Use with the <Titanium.UI.TextField.inputType> properties. This overrides any changes <Titanium.UI.TextField.keyboardType>
        does to the inputType of the Android device.
    type: Number
    permission: read-only
    platforms: [android]

  - name: INPUT_TYPE_CLASS_TEXT
    summary: Use an ASCII keyboard, with the standard keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.inputType> properties. This overrides any changes <Titanium.UI.TextField.keyboardType>
        does to the inputType of the Android device.
    type: Number
    permission: read-only
    platforms: [android]

  - name: KEYBOARD_APPEARANCE_ALERT
    summary: Use a keyboard appearance suitable for entering text on an alert.
    type: Number
    permission: read-only
    deprecated:
        since: "5.4.0"
        removed: "8.0.0"
    platforms: [iphone, ipad]

  - name: KEYBOARD_APPEARANCE_DEFAULT
    summary: Use the platform-specific default keyboard appearance.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]

  - name: KEYBOARD_APPEARANCE_DARK
    summary: Use the platform-specific dark keyboard appearance.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "5.2.0"

  - name: KEYBOARD_APPEARANCE_LIGHT
    summary: Use the platform-specific light keyboard appearance.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "5.2.0"

  - name: KEYBOARD_ASCII
    summary: Use a keyboard supporting all characters except emoji. Defaults to English letters layout on iOS.
    description: |
        This keyboard type allows the end-user to enter numbers, symbols, and non-English letters too.
        It just launches with the English letters keyboard layout when shown.
        This type will not allow the end-user to display an emoji keyboard.

        Android keyboards will typically ignore this setting and show the default language keyboard instead,
        but will still not allow the end-user to enter emoji characters like iOS.

        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_ASCII](Titanium.UI.KEYBOARD_TYPE_ASCII) instead.

  - name: KEYBOARD_DECIMAL_PAD
    summary: Use a number pad keyboard layout showing only numbers, decimal separator, and sign character.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.

        On iPad, this behaves the same as <Titanium.UI.KEYBOARD_DEFAULT>.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_DECIMAL_PAD](Titanium.UI.KEYBOARD_TYPE_DECIMAL_PAD) instead.

  - name: KEYBOARD_DEFAULT
    summary: Use the default keyboard, depending on the platform.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    exclude-platforms: [macos]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_DEFAULT](Titanium.UI.KEYBOARD_TYPE_DEFAULT) instead.

  - name: KEYBOARD_EMAIL
    summary: Use a keyboard suitable for composing email, with the standard keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    exclude-platforms: [macos]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_EMAIL](Titanium.UI.KEYBOARD_TYPE_EMAIL) instead.

  - name: KEYBOARD_NAMEPHONE_PAD
    summary: Use a keyboard suitable for entering names and phone numbers, with the pad keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_NAMEPHONE_PAD](Titanium.UI.KEYBOARD_TYPE_NAMEPHONE_PAD) instead.

  - name: KEYBOARD_NUMBERS_PUNCTUATION
    summary: Use a keyboard supporting all characters except emoji, defaulting to numbers layout on iOS.
    description: |
        On iOS, this will default to showing the "Numbers and Punctuation" side of the keyboard,
        but still allows the end-user to switch to other keyboards for entering letters as well.
        This type will not allow the end-user to display an emoji keyboard.

        On Android, this type displays a normal keyboard defaulting to the letter side,
        but will not allow the end-user to enter emoji characters like iOS.

        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION](Titanium.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION) instead.

  - name: KEYBOARD_NUMBER_PAD
    summary: Use a number pad keyboard layout only showing numbers for entering positive integers.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.

        On iPad, this behaves the same as <Titanium.UI.KEYBOARD_NUMBERS_PUNCTUATION>.
    type: Number
    permission: read-only
    exclude-platforms: [macos]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_NUMBER_PAD](Titanium.UI.KEYBOARD_TYPE_NUMBER_PAD) instead.

  - name: KEYBOARD_PHONE_PAD
    summary: Use a keyboard with a phone-style number pad, with the pad keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.

        On iPad, this behaves the same as <Titanium.UI.KEYBOARD_NUMBERS_PUNCTUATION>.
    type: Number
    permission: read-only
    exclude-platforms: [macos]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_PHONE_PAD](Titanium.UI.KEYBOARD_TYPE_PHONE_PAD) instead.

  - name: KEYBOARD_URL
    summary: Use a keyboard optimized for entering URLs, with the standard keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    exclude-platforms: [macos]
    deprecated:
        since: "5.2.0"
        removed: "8.0.0"
        notes: Use [Titanium.UI.KEYBOARD_TYPE_URL](Titanium.UI.KEYBOARD_TYPE_URL) instead.

  - name: KEYBOARD_TYPE_DECIMAL_PAD
    type: Number
    summary: Use a number pad keyboard layout showing only numbers, decimal separator, and sign character.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.

        On iPad, this behaves the same as <Titanium.UI.KEYBOARD_TYPE_DEFAULT>.
        type: Number
    permission: read-only
    since: "5.2.0"

  - name: KEYBOARD_TYPE_ASCII
    summary: Use a keyboard supporting all characters except emoji. Defaults to English letters layout on iOS.
    description: |
        This keyboard type allows the end-user to enter numbers, symbols, and non-English letters too.
        It just launches with the English letters keyboard layout when shown.
        This type will not allow the end-user to display an emoji keyboard.

        Android keyboards will typically ignore this setting and show the default language keyboard instead,
        but will still not allow the end-user to enter emoji characters like iOS.

        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    since: "5.2.0"

  - name: KEYBOARD_TYPE_DEFAULT
    summary: Use the default keyboard, depending on the platform.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    since: "5.2.0"

  - name: KEYBOARD_TYPE_EMAIL
    summary: Use a keyboard suitable for composing email, with the standard keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    since: "5.2.0"

  - name: KEYBOARD_TYPE_NAMEPHONE_PAD
    summary: Use a keyboard suitable for entering names and phone numbers, with the pad keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    since: "5.2.0"

  - name: KEYBOARD_TYPE_NUMBERS_PUNCTUATION
    summary: Use a keyboard supporting all characters except emoji, defaulting to numbers layout on iOS.
    description: |
        On iOS, this will default to showing the "Numbers and Punctuation" side of the keyboard,
        but still allows the end-user to switch to other keyboards for entering letters as well.
        This type will not allow the end-user to display an emoji keyboard.

        On Android, this type displays a normal keyboard defaulting to the letter side,
        but will not allow the end-user to enter emoji characters like iOS.

        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    since: "5.2.0"

  - name: KEYBOARD_TYPE_NUMBER_PAD
    summary: Use a number pad keyboard layout only showing numbers for entering positive integers.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.

        On iPad, this behaves the same as <Titanium.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION>.
    type: Number
    permission: read-only
    since: "5.2.0"

  - name: KEYBOARD_TYPE_PHONE_PAD
    summary: Use a keyboard with a phone-style number pad, with the pad keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.

        On iPad, this behaves the same as <Titanium.UI.KEYBOARD_TYPE_NUMBERS_PUNCTUATION>.
    type: Number
    permission: read-only
    since: "5.2.0"

  - name: KEYBOARD_TYPE_WEBSEARCH
    summary: Use a keyboard optimized for web search terms and URL entry.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties. This type features the space and . characters prominently.

        Note: This keyboard automatically sets the return key to "Go" (localized).
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "5.2.0"

  - name: KEYBOARD_TYPE_TWITTER
    summary: Use a keyboard optimized for twitter text entry, with easy access to the @ and # characters.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: "5.2.0"

  - name: KEYBOARD_TYPE_URL
    summary: Use a keyboard optimized for entering URLs, with the standard keyboard layout.
    description: |
        Use with the <Titanium.UI.TextField.keyboardType> and <Titanium.UI.TextArea.keyboardType>
        properties.
    type: Number
    permission: read-only
    since: "5.2.0"

  - name: LANDSCAPE_LEFT
    summary: Standard landscape orientation (home button on left).
    description: |
        One of the group of orientation constants for the <Titanium.Gesture> module,
        <Titanium.UI.PORTRAIT>,
        <Titanium.UI.UPSIDE_PORTRAIT>,
        <Titanium.UI.LANDSCAPE_LEFT>,
        <Titanium.UI.LANDSCAPE_RIGHT>,
        <Titanium.UI.FACE_UP>,
        <Titanium.UI.FACE_DOWN>,
        and <Titanium.UI.UNKNOWN>.
    type: Number
    permission: read-only

  - name: LANDSCAPE_RIGHT
    summary: Reverse landscape orientation (home button on right).
    description: |
        One of the group of orientation constants for the <Titanium.Gesture> module,
        <Titanium.UI.PORTRAIT>,
        <Titanium.UI.UPSIDE_PORTRAIT>,
        <Titanium.UI.LANDSCAPE_LEFT>,
        <Titanium.UI.LANDSCAPE_RIGHT>,
        <Titanium.UI.FACE_UP>,
        <Titanium.UI.FACE_DOWN>,
        and <Titanium.UI.UNKNOWN>.
    type: Number
    permission: read-only

  - name: LIST_ACCESSORY_TYPE_NONE
    summary: Do not display anything on the right side of an item in a list view.
    type: Number
    permission: read-only
    since: '3.1.0'

  - name: LIST_ACCESSORY_TYPE_CHECKMARK
    summary: Displays a checkmark on the right side of an item in a list view.
    description: |
        Use to indicate an item in a list is selected.
    type: Number
    permission: read-only
    since: '3.1.0'

  - name: LIST_ACCESSORY_TYPE_DETAIL
    summary: Displays a detail disclosure button on the right side of an item in a list view.
    description: |
        Use to indicate that selecting this item results in the display of a detailed view of that item.
    type: Number
    permission: read-only
    since: '3.1.0'

  - name: LIST_ACCESSORY_TYPE_DISCLOSURE
    summary: Displays a disclosure indicator on the right side of an item in a list view.
    description: |
        Use to indicate that selecting this item results in the display of another list, reflecting
        the next level in the data model hierarchy.
    type: Number
    permission: read-only
    since: '3.1.0'

  - name: LIST_ITEM_TEMPLATE_DEFAULT
    summary: |
        A built-in style for an item with an image view and left-aligned title label.
    description: |
        The text label value and image value bind to the `title` and `image` properties, respectively,
        of the data item. If a property is not set, that element is not displayed.

        On Android, the image appears on the right side of the cell, and on iOS, the image appears
        on the left side of the cell.
    type: Number
    permission: read-only
    since: '3.1.0'

  - name: LIST_ITEM_TEMPLATE_SETTINGS
    summary: |
        A built-in style for a item with an image view; a left-aligned title label; and a
        right-aligned subtitle label.
    description: |
        The title label value, subtitle label value and image value bind to the `title`, `subtitle`
        and `image` properties, respectively, of the data item. If a property is not set, that
        element is not displayed.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: '3.1.0'

  - name: LIST_ITEM_TEMPLATE_CONTACTS
    summary: |
        A built-in style for an item with a right-aligned title label on the left side of the cell,
        which is next to a left-aligned subtitle label.
    description: |
        The title label value and subtitle label value bind to the `title` and `subtitle`
        properties, respectively, of the data item. If a property is not set, that element is not
        displayed.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: '3.1.0'

  - name: LIST_ITEM_TEMPLATE_SUBTITLE
    summary: |
        A built-in style for an item with an image view; a black, left-aligned title label across the
        top of the cell and a subtitle label below it.
    description: |
        The title label value, subtitle label value and image value bind to the `title`, `subtitle`
        and `image` properties, respectively, of the data item. If a property is not set, that
        element is not displayed.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    since: '3.1.0'

  - name: NOTIFICATION_DURATION_LONG
    summary: Specifies a long duration for an Android Toast notification (<Titanium.UI.Notification>).
    type: Number
    permission: read-only
    platforms: [android]

  - name: NOTIFICATION_DURATION_SHORT
    summary: Specifies a short duration for an Android Toast notification (<Titanium.UI.Notification>).
    type: Number
    permission: read-only
    platforms: [android]

  - name: CLIPBOARD_OPTION_LOCAL_ONLY
    summary: Specifies that the clipboard items should not be available to other devices through Handoff.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "10.0"}}
    since: "5.5.0"

  - name: CLIPBOARD_OPTION_EXPIRATION_DATE
    summary: |
        Specifies the time and date that you want the system to remove the clipboard items from the clipboard.

        Note that on macOS, setting a date in the past does not appear to invalidate items immediately, while on iOS it does.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "10.0"}}
    since: "5.5.0"

  - name: PICKER_TYPE_COUNT_DOWN_TIMER
    summary: Use a picker with a countdown timer appearance, showing hours and minutes.
    description: |
        For an actual countdown timer, the application is responsible for setting a timer
        to update the picker values.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]

  - name: PICKER_TYPE_DATE
    summary: Use a date picker.
    type: Number
    permission: read-only

  - name: PICKER_TYPE_DATE_AND_TIME
    summary: Use a date and time picker.
    type: Number
    permission: read-only

  - name: PICKER_TYPE_PLAIN
    summary: Use a plain picker (for values other than date or time).
    type: Number
    permission: read-only

  - name: PICKER_TYPE_TIME
    summary: Use a time picker.
    type: Number
    permission: read-only

  - name: PORTRAIT
    summary: Orientation constant for portrait mode orientation.
    description: |
        One of the group of orientation constants for the <Titanium.Gesture> module,
        <Titanium.UI.PORTRAIT>,
        <Titanium.UI.UPSIDE_PORTRAIT>,
        <Titanium.UI.LANDSCAPE_LEFT>,
        <Titanium.UI.LANDSCAPE_RIGHT>,
        <Titanium.UI.FACE_UP>,
        <Titanium.UI.FACE_DOWN>,
        and <Titanium.UI.UNKNOWN>.
    type: Number
    permission: read-only

  - name: RETURNKEY_CONTINUE
    summary: Set the return key text to "Continue".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.

        Note: This constant is only available on iOS devices running iOS 9 or later. Older iOS
        devices will display <Titanium.UI.RETURNKEY_DEFAULT>.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "9.0"}}
    since: "5.2.0"

  - name: RETURNKEY_DEFAULT
    summary: Use the default return key on the virtual keyboard.
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.

        On Android devices, the default return key displays a graphical arrow.
    type: Number
    permission: read-only

  - name: RETURNKEY_DONE
    summary: Set the return key text to "Done".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_EMERGENCY_CALL
    summary: Set the return key text to "Emergency Call".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_GO
    summary: Set the return key text to "Go".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_GOOGLE
    summary: Set the return key text to "Google".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_JOIN
    summary: Set the return key text to "Join".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_NEXT
    summary: Set the return key text to "Next".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_ROUTE
    summary: Set the return key text to "Route".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_SEARCH
    summary: Set the return key text to "Search".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_SEND
    summary: Set the return key text to "Send".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: RETURNKEY_YAHOO
    summary: Set the return key text to "Yahoo".
    description: |
        Use with the <Titanium.UI.TextField.returnKeyType> and
        <Titanium.UI.TextArea.returnKeyType> properties.
    type: Number
    permission: read-only

  - name: SEMANTIC_COLOR_TYPE_DARK
    summary: The value returned by <Titanium.UI.semanticColorType> when the device is in dark/night mode.
    type: String
    permission: read-only
    since: "8.2.0"
    value: "dark"
    deprecated:
      since: "9.1.0"
      notes: Use [USER_INTERFACE_STYLE_DARK](Titanium.UI.USER_INTERFACE_STYLE_DARK) instead.

  - name: SEMANTIC_COLOR_TYPE_LIGHT
    summary: The value returned by <Titanium.UI.semanticColorType> when the device is in light/normal mode.
    type: String
    permission: read-only
    since: "8.2.0"
    value: "light"
    deprecated:
      since: "9.1.0"
      notes: Use [USER_INTERFACE_STYLE_LIGHT](Titanium.UI.USER_INTERFACE_STYLE_LIGHT) instead.

  - name: semanticColorType
    summary: The current mode for the device (corresponding to night/dark or light/normal)
    type: String
    constants: Titanium.UI.SEMANTIC_COLOR_TYPE_*
    since: "8.2.0"
    deprecated:
      since: "9.1.0"
      notes: Use [userInterfaceStyle](Titanium.UI.userInterfaceStyle) instead.

  - name: SIZE
    summary: SIZE behavior for UI layout.
    description: The SIZE behavior means the view will constrain its size fit its contents.
    type: String
    permission: read-only
    since: "2.0.0"

  - name: SWITCH_STYLE_CHECKBOX
    summary: Use with [Switch.style](Titanium.UI.Switch.style) to show a checkbox.
    description: |
        This is supported by Android and macOS apps running on Big Sur (v11) or higher. iOS devices do not
        support this style and will use [SWITCH_STYLE_SLIDER](Titanium.UI.SWITCH_STYLE_SLIDER) instead.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: SWITCH_STYLE_TOGGLE_BUTTON
    summary: Use with [Switch.style](Titanium.UI.Switch.style) to show a toggleable button.
    description: |
        This style is only supported on Android.
        On iOS, this will use [SWITCH_STYLE_SLIDER](Titanium.UI.SWITCH_STYLE_SLIDER) instead.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: SWITCH_STYLE_SLIDER
    summary: Use with [Switch.style](Titanium.UI.Switch.style) to show a slidable button.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: SWITCH_STYLE_CHIP
    summary: Use with [Switch.style](Titanium.UI.Switch.style) to show a material design checkable chip widget.
    description: |
        This style is only supported on Android.
        On iOS, this will use [SWITCH_STYLE_SLIDER](Titanium.UI.SWITCH_STYLE_SLIDER) instead.
    type: Number
    permission: read-only
    since: "10.0.0"

  - name: TABLE_VIEW_SEPARATOR_STYLE_NONE
    summary: The row divider is hidden.
    type: Number
    since: "5.2.0"
    permission: read-only

  - name: TABLE_VIEW_SEPARATOR_STYLE_SINGLE_LINE
    summary: The row divider is shown as a single line.
    type: Number
    since: "5.2.0"
    permission: read-only

  - name: TEXT_ALIGNMENT_CENTER
    summary: Center align text.
    description: |
        Use with the <Titanium.UI.TextField.textAlign>, <Titanium.UI.Button.textAlign> and
        <Titanium.UI.TextArea.textAlign> properties.

        This constant is a string on Android, and a number on iOS.
    type: [Number, String]
    permission: read-only

  - name: TEXT_ALIGNMENT_JUSTIFY
    summary: Justify align text.
    description: |
        Use with the <Titanium.UI.TextField.textAlign>, <Titanium.UI.Button.textAlign> and
        <Titanium.UI.TextArea.textAlign> properties.

        This constant is a number on iOS and a string on Android.
    type: [Number, String]
    permission: read-only
    platforms: [android, iphone, ipad, macos]
    osver: {android: {min: "8.0"}}
    since: { android: "10.0.0", iphone: "6.1.0", ipad: "6.1.0" }

  - name: TEXT_ALIGNMENT_LEFT
    summary: Left align text.
    description: |
        Use with the <Titanium.UI.TextField.textAlign>, <Titanium.UI.Button.textAlign> and
        <Titanium.UI.TextArea.textAlign> properties.

        This constant is a string on Android, and a number on iOS.
    type: [Number, String]
    permission: read-only

  - name: TEXT_ALIGNMENT_RIGHT
    summary: Right align text.
    description: |
        Use with the <Titanium.UI.TextField.textAlign>, <Titanium.UI.Button.textAlign> and
        <Titanium.UI.TextArea.textAlign> properties.

        This constant is a string on Android, and a number on iOS.
    type: [Number, String]
    permission: read-only

  - name: TEXT_AUTOCAPITALIZATION_ALL
    summary: Auto-capitalize all text in the input field.
    description: |
        Use with the <Titanium.UI.TextField.autocapitalization> and
        <Titanium.UI.TextArea.autocapitalization> properties.
    type: Number
    permission: read-only


  - name: TEXT_AUTOCAPITALIZATION_NONE
    summary: Do not auto-capitalize.
    description: |
        Use with the <Titanium.UI.TextField.autocapitalization> and
        <Titanium.UI.TextArea.autocapitalization> properties.
    type: Number
    permission: read-only


  - name: TEXT_AUTOCAPITALIZATION_SENTENCES
    summary: Use sentence-style auto-capitalization in the input field.
    description: |
        Use with the <Titanium.UI.TextField.autocapitalization> and
        <Titanium.UI.TextArea.autocapitalization> properties.
    type: Number
    permission: read-only


  - name: TEXT_AUTOCAPITALIZATION_WORDS
    summary: Auto-capitalize the first letter of each word in the input field.
    description: |
        Use with the <Titanium.UI.TextField.autocapitalization> and
        <Titanium.UI.TextArea.autocapitalization> properties.
    type: Number
    permission: read-only

  - name: TEXT_STYLE_HEADLINE
    summary: The font used for headings.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "7.0"}}
    since: "3.2.0"

  - name: TEXT_STYLE_SUBHEADLINE
    summary: The font used for subheadings.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "7.0"}}
    since: "3.2.0"

  - name: TEXT_STYLE_BODY
    summary: The font used for body texts.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "7.0"}}
    since: "3.2.0"

  - name: TEXT_STYLE_FOOTNOTE
    summary: The font used in footnotes.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "7.0"}}
    since: "3.2.0"

  - name: TEXT_STYLE_CAPTION1
    summary: The font used for standard captions.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "7.0"}}
    since: "3.2.0"

  - name: TEXT_STYLE_CAPTION2
    summary: The font used for alternate captions.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "7.0"}}
    since: "3.2.0"

  - name: TEXT_STYLE_CALLOUT
    summary: The font used for callouts.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "9.0"}}
    since: "6.0.0"

  - name: TEXT_STYLE_TITLE1
    summary: The font used for first level hierarchical headings.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "9.0"}}
    since: "6.0.0"

  - name: TEXT_STYLE_TITLE2
    summary: The font used for second level hierarchical headings.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "9.0"}}
    since: "6.0.0"

  - name: TEXT_STYLE_TITLE3
    summary: The font used for third level hierarchical headings.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "9.0"}}
    since: "6.0.0"

  - name: TEXT_STYLE_LARGE_TITLE
    summary: Specifies the text style for the <Font> Object.
    description: |
        One of the group of textStyle constants for the <Font> Object.
    type: String
    permission: read-only
    platforms: [iphone, ipad, macos]
    osver: {ios: {min: "11.0"}}
    since: "8.1.0"

  - name: TEXT_VERTICAL_ALIGNMENT_BOTTOM
    summary: Align text to the bottom of the view.
    description: |
        Use with the <Titanium.UI.TextField.verticalAlign> and
        <Titanium.UI.TextArea.verticalAlign> properties.

        This constant is a string on Android, and a number on iOS.
    type: [Number, String]
    permission: read-only

  - name: TEXT_VERTICAL_ALIGNMENT_CENTER
    summary: Vertically align text to the center of the view.
    description: |
        Use with the <Titanium.UI.TextField.verticalAlign> and
        <Titanium.UI.TextArea.verticalAlign> properties.

        This constant is a string on Android, and a number on iOS.
    type: [Number, String]
    permission: read-only

  - name: TEXT_VERTICAL_ALIGNMENT_TOP
    summary: Align text to the top of the view.
    description: |
        Use with the <Titanium.UI.TextField.verticalAlign> and
        <Titanium.UI.TextArea.verticalAlign> properties.

        This constant is a string on Android, and a number on iOS.
    type: [Number, String]
    permission: read-only

  - name: UNIT_CM
    summary: Unit constant representing units in centimeters.
    type: String
    permission: read-only
    since: "2.0.0"

  - name: UNIT_DIP
    summary: Unit constant representing units in density-independent pixels.
    type: String
    permission: read-only
    since: "2.0.0"

  - name: UNIT_IN
    summary: Unit constant representing units in inches.
    type: String
    permission: read-only
    since: "2.0.0"

  - name: UNIT_MM
    summary: Unit constant representing units in millimeters.
    type: String
    permission: read-only
    since: "2.0.0"

  - name: UNIT_PX
    summary: Unit constant representing units in pixels.
    type: String
    permission: read-only
    since: "2.0.0"

  - name: UNKNOWN
    summary: Orientation constant representing an unknown orientation.
    description: |
        One of the group of orientation constants for the <Titanium.Gesture> module,
        <Titanium.UI.PORTRAIT>,
        <Titanium.UI.UPSIDE_PORTRAIT>,
        <Titanium.UI.LANDSCAPE_LEFT>,
        <Titanium.UI.LANDSCAPE_RIGHT>,
        <Titanium.UI.FACE_UP>,
        <Titanium.UI.FACE_DOWN>,
        and <Titanium.UI.UNKNOWN>.
    type: Number
    permission: read-only

  - name: UPSIDE_PORTRAIT
    summary: Orientation constant for inverted portait orientation.
    description: |
        One of the group of orientation constants for the <Titanium.Gesture> module,
        <Titanium.UI.PORTRAIT>,
        <Titanium.UI.UPSIDE_PORTRAIT>,
        <Titanium.UI.LANDSCAPE_LEFT>,
        <Titanium.UI.LANDSCAPE_RIGHT>,
        <Titanium.UI.FACE_UP>,
        <Titanium.UI.FACE_DOWN>,
        and <Titanium.UI.UNKNOWN>.
    type: Number
    permission: read-only

  - name: URL_ERROR_AUTHENTICATION
    summary: Authentication error code reported via <Titanium.UI.WebView.error>.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_BAD_URL
    summary: Bad url error code reported via <Titanium.UI.WebView.error>.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_CONNECT
    summary: Error code reported via <Titanium.UI.WebView.error> for a failure to connect to host.
    type: Number
    since: "3.0.0"
    permission: read-only


  - name: URL_ERROR_SSL_FAILED
    summary: Error code reported via <Titanium.UI.WebView.error> for an SSL failure.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_FILE
    summary: Error code reported via <Titanium.UI.WebView.error> for a failure to access a file resource on a host, except "file not found", which has its own constant.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_FILE_NOT_FOUND
    summary: Error code reported via <Titanium.UI.WebView.error> when a requested file does not exist on the host.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_HOST_LOOKUP
    summary: Error code reported via <Titanium.UI.WebView.error> when a host name cannot be resolved, such as via a DNS lookup error.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_REDIRECT_LOOP
    summary: Error code reported via <Titanium.UI.WebView.error> when a redirect loop is detected.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_TIMEOUT
    summary: Error code reported via <Titanium.UI.WebView.error> when a timeout occurs.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_UNKNOWN
    summary: Error code reported via <Titanium.UI.WebView.error> when an unknown error occurs.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: URL_ERROR_UNSUPPORTED_SCHEME
    summary: Error code reported via <Titanium.UI.WebView.error> when a url contains an unsupported scheme.
    type: Number
    since: "3.0.0"
    permission: read-only

  - name: USER_INTERFACE_STYLE_UNSPECIFIED
    summary: An unspecified interface style.
    description: |
        Used in the `userInterfaceStyle` property. Value indicating that no mode has been set.
        See [UI_MODE_NIGHT_UNDEFINED](https://developer.android.com/reference/android/content/res/Configuration.html#UI_MODE_NIGHT_UNDEFINED)
    type: Number
    permission: read-only
    osver: {ios: {min: "13.0"}}
    since: "9.1.0"

  - name: USER_INTERFACE_STYLE_LIGHT
    summary: A light interface style.
    description:  |
        Used in the `userInterfaceStyle` property. Value indicating that light/normal mode has been set.
        See [UI_MODE_NIGHT_NO](https://developer.android.com/reference/android/content/res/Configuration.html#UI_MODE_NIGHT_NO)
    type: Number
    permission: read-only
    osver: {ios: {min: "13.0"}}
    since: "9.1.0"

  - name: USER_INTERFACE_STYLE_DARK
    summary: A dark interface style.
    description: |
        Used in the `userInterfaceStyle` property. Value indicating that night/dark mode has been set.
        See [UI_MODE_NIGHT_YES](https://developer.android.com/reference/android/content/res/Configuration.html#UI_MODE_NIGHT_YES)
    type: Number
    permission: read-only
    osver: {ios: {min: "13.0"}}
    since: "9.1.0"

  - name: backgroundColor
    summary: |
        Sets the background color of the master view (when there are no windows or other top-level
        controls displayed).
    description: |
        The default background color may also show through if you use semi-transparent
        windows.
    type: [String, Titanium.UI.Color]

  - name: backgroundImage
    summary: |
        Local path or URL to an image file for setting a background for the master view (when there
        are no windows or other top-level controls displayed).
    description: |
        The default background image may also show through if you use semi-transparent
        windows.
    type: String

  - name: overrideUserInterfaceStyle
    summary: Forces the app to used assigned theme instead of the system theme.
    description: |
        When set to [USER_INTERFACE_STYLE_DARK](Titanium.UI.USER_INTERFACE_STYLE_DARK) or
        [USER_INTERFACE_STYLE_LIGHT](Titanium.UI.USER_INTERFACE_STYLE_LIGHT), the app will ignore
        the system's current theme and use the theme assigned to this property instead.

        When set to [USER_INTERFACE_STYLE_UNSPECIFIED](Titanium.UI.USER_INTERFACE_STYLE_UNSPECIFIED),
        the app will use the system's current theme. To determine what the system's current theme is,
        you must read the [userInterfaceStyle](Titanium.UI.userInterfaceStyle) property.

        See [UI_MODE_NIGHT_MASK](https://developer.android.com/reference/android/content/res/Configuration.html#UI_MODE_NIGHT_MASK).
    type: Number
    default: Titanium.UI.USER_INTERFACE_STYLE_UNSPECIFIED
    constants: Titanium.UI.USER_INTERFACE_STYLE_*
    osver: {ios: {min: "13.0"}}
    since: "10.0.1"

  - name: tintColor
    summary: |
        Sets the global tint color of the application. It is inherited by the child views and can be
        overwritten by them using the `tintColor` property.
    type: [String, Titanium.UI.Color]
    since: "6.0.0"
    platforms: [iphone, ipad, macos]

  - name: userInterfaceStyle
    summary: The style associated with the user interface.
    description: |
        Use this property to determine whether your interface should be configured with a dark or light appearance.
        The default value of this trait is set to the corresponding appearance setting on the user's device.

        See [UI_MODE_NIGHT_MASK](https://developer.android.com/reference/android/content/res/Configuration.html#UI_MODE_NIGHT_MASK).
    type: Number
    permission: read-only
    constants: Titanium.UI.USER_INTERFACE_STYLE_*
    osver: {ios: {min: "13.0"}}
    since: "9.1.0"

examples:
  - title: Color Demo
    example: |
        The following example demonstrates all the color formats, and color names, that are intended
        to be supported by Titanium. See the [description](Titanium.UI) section for details.

        ``` js
        var colorArray = [
          '#ff00ff', '#f0f', 'rgb(255,0,255)',
          'transparent', '#55ff00ff', '#5f0f', 'rgba(255,0,255,0.3)',
          'aqua', 'black', 'blue', 'brown', 'cyan', 'darkgray', 'fuchsia', 'gray', 'green',
          'lightgray', 'lime', 'magenta', 'maroon', 'navy', 'olive', 'orange', 'pink',
          'purple', 'red', 'silver', 'teal', 'white', 'yellow',
        ];
        var win = Ti.UI.createWindow({
          backgroundColor: 'black',
          exitOnClose: true,
          fullscreen: false,
          layout: 'vertical',
          title: 'Color Demo'
        });
        var rows = [];
        var row;
        for (var i=0, ilen = colorArray.length; i < ilen; i++){
          row = Ti.UI.createTableViewRow({
            color:'black',
            backgroundColor: colorArray[i],
            title: colorArray[i],
            height: 40
          });
          rows.push(row);
        }
        var table = Ti.UI.createTableView({
          data: rows,
          backgroundColor: 'white'
        });
        win.add(table);
        win.open();
        ```
