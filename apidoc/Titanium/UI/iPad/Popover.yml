---
name: Titanium.UI.iPad.Popover
summary: A Popover is used to manage the presentation of content in a popover.
description: |
    A popover is created using the <Titanium.UI.iPad.createPopover> method or **`<Popover>`** Alloy element.

    Popovers are used to present information temporarily, but in a way that does not take over
    the entire screen in the way that a modal view does. The popover content is layered on top of
    the existing content in a special type of window. The popover remains visible until the user
    taps outside of the popover window or it is explicitly dismissed.

    Do not add top-level view containers, such as a `SplitWindow` or `TabGroup`, to a popover.
    Adding top-level view containers may have unintended side effects. See the [contentView](Titanium.UI.iPad.Popover.contentView)
    property for more information.
extends: Titanium.UI.View
platforms: [ipad, macos]
since: {ipad: "1.2.0", macos: "9.2.0"}
excludes:
    events: [click, dblclick, doubletap, focus, keypressed, longclick, longpress, pinch, postlayout,
             singletap, swipe, touchcancel, touchend, touchmove, touchstart, twofingertap]
    methods: [add, remove, replaceAt, animate, convertPointToView, removeAllChildren, toImage]
    properties: [accessibilityHidden,accessibilityHint,accessibilityLabel,accessibilityValue,
                 anchorPoint,animatedCenter,backgroundDisabledColor,
                 backgroundDisabledImage,backgroundFocusedColor,backgroundFocusedImage,backgroundGradient,
                 backgroundImage,backgroundLeftCap,backgroundRepeat,backgroundSelectedColor,
                 backgroundSelectedImage,backgroundTopCap,borderColor,borderRadius,borderWidth,bottom,center,
                 children,clipMode,focusable,horizontalWrap,keepScreenOn,layout,left,opacity,overrideCurrentAnimation,
                 pullBackgroundColor,rect,right,size,softKeyboardOnFocus,tintColor,top,touchEnabled,transform,
                 viewShadowColor,viewShadowOffset,viewShadowRadius,visible,zIndex]

events:
  - name: hide
    summary: Fired when the popover is hidden.

methods:
  - name: hide
    summary: Hides the popover.
    parameters:
      - name: options
        summary: |
            Display properties to use when hiding the popover.
            Note that the default here is equivalent to passing in `{ animated: false }`
        type: AnimatedOptions
        optional: true
        default: "{ animated: false }"

  - name: show
    summary: Displays the popover.
    parameters:
      - name: options
        summary: |
            Display properties to use when displaying the popover.
            Note that the default here is to be animated.
        type: ShowPopoverParams

properties:
  - name: arrowDirection
    summary: Indicates the arrow direction of the popover.
    description: |
        Use this property to indicate the popover arrows to use.  You can bitwise-OR the constant
        values together.

        Do not set this property to <Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_UNKNOWN>.
    type: Number
    constants: [Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_ANY,Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_DOWN,
                Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_LEFT,Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_RIGHT,
                Titanium.UI.iPad.POPOVER_ARROW_DIRECTION_UP]

  - name: backgroundColor
    summary: Sets the background color of the popover.
    description: |
        It is recommended to set this property to colorize the whole popover instead of only
        its content view.
    availability: creation
    since: "5.2.0"
    default: undefined (behaves as transparent)

  - name: contentView
    summary: View to use for the popover content. Must be set before calling the `show()` method.
    description: |
        Set this property to any <Titanium.UI.View> object, including a <Titanium.UI.Window> or
        <Titanium.UI.NavigationWindow> object.

        This property does not support the <Titanium.UI.iOS.SplitWindow> or <Titanium.UI.TabGroup> objects.

        When this property is set to a valid object, the popover **does not include the navigation
        controller** unless it is set to a <Titanium.UI.NavigationWindow> object.

        In an Alloy application, you can specify this property as a `<ContentView>` child element
        of the `<Popover>` element:

        ``` xml
        <Alloy>
            <Popover>
                <ContentView>
                    <Window title="Popover">
                        <Label>Popover!</Label>
                    </Window>
                </ContentView>
            </Popover>
        </Alloy>
        ```
    type: Titanium.UI.View
    since: "3.2.0"

  - name: height
    summary: Height of the popover.
    deprecated:
        since: "3.4.2"
        notes: This property is deprecated. Set the height on the [Titanium.UI.iPad.Popover.contentView](Titanium.UI.iPad.Popover.contentView) property instead.
        removed: "9.0.0"
    type: [Number, String]
    exclude-platforms: [macos]

  - name: passthroughViews
    summary: Passthrough views to use when the popover is shown.
    description: |
        Specify view objects that the user can interact with while the popover is open. While
        interacting with these view, the popover will not be dismissed.
    type: Array<Titanium.UI.View>

  - name: width
    summary: Width of the popover.
    deprecated:
        since: "3.4.2"
        notes: This property is deprecated. Set the width on the [Titanium.UI.iPad.Popover.contentView](Titanium.UI.iPad.Popover.contentView) property instead.
        removed: "9.0.0"
    exclude-platforms: [macos]
    type: [Number, String]

examples:
  - title: Simple Popover with a Title and Right Button
    example: |
        In this example, we create a simple popover and position it near the button.

        ``` js
        var win = Ti.UI.createWindow({backgroundColor: 'white'});

        var button = Ti.UI.createButton({title: 'Open Popover!'});
        button.addEventListener('click', function(e){
            popover.show({ view: button });
        })
        win.add(button);

        var rightButton = Ti.UI.createButton({title: 'Robin'});
        rightButton.addEventListener('click', function(e){
            alert("But green's the color of spring.");
        });

        var contentWindow = Ti.UI.createWindow({
            rightNavButton: rightButton,
            title: 'Kermit'
        });
        contentWindow.add(Ti.UI.createLabel({text: "It's not easy being green."}));

        var popover = Ti.UI.iPad.createPopover({
            backgroundColor: 'green',
            contentView: Ti.UI.createNavigationWindow({
                width: 250,
                height: 100,
                window: contentWindow
            })
        });

        win.open();
        ```

  - title: Alloy XML Markup
    example: |
        Previous example as an Alloy project.

        `app/views/index.xml`:
        ``` xml
        <Alloy>
            <Window>
                <Button id="button" onClick="openPopover">Open Popover!</Button>
            </Window>
        </Alloy>
        ```

        `app/controllers/index.js`:
        ``` js
        function openPopover() {
            var popover = Alloy.createController('popover').getView();
            popover.show({view:$.button});
        };

        $.index.open();
        ```

        `app/views/popover.xml`:
        ``` xml
        <Alloy>
            <Popover backgroundColor='green'>
                <ContentView>
                    <NavigationWindow height='100' width='250'>
                        <Window title='Kermit'>
                            <RightNavButton onClick="showAlert" title="Robin" />
                            <Label>It's not easy being green.</Label>
                        </Window>
                    </NavigationWindow>
                </ContentView>
            </Popover>
        </Alloy>
        ```

        `app/controllers/popover.js`:
        ``` js
        function showAlert(e) {
            alert('But green is the color of spring.');
        };

        // Prior to Alloy 1.1.0, the rightNavButton property was set in the controller.
        // var button = Ti.UI.createButton({title: 'Robin'});
        // button.addEventListener('click', showAlert);
        // $.popover.rightNavButton = button;
        ```

---
name: ShowPopoverParams
summary: Dictionary of options for <Titanium.UI.iPad.Popover.show>.
description: |
    All properties are optional except you need to specify the `view` property for the `show()`
    method to attach the popover to a view component.
properties:
  - name: animated
    summary: Indicates whether to animate showing the popover.
    type: Boolean
    default: true
    optional: true

  - name: rect
    summary: |
        Sets the arrow position of the popover relative to the attached view object's dimensions
        when showing the popover.
    description:
        Setting the x, y coordinates to (0, 0) places the popover in the top-left corner of the
        view object.  Set both the `width` and `height` properties to 1.
    type: Dimension
    default: All dimension properties are set to zero.
    optional: true

  - name: view
    summary: Attaches the popover to the specified view when showing the popover.
    type: Titanium.UI.View
    optional: false
