---
name: Titanium.UI.OptionDialog
summary: |
    An option dialog is a modal view that includes a message and one or more option items positioned
    in the middle of the display on Android and at the bottom edge on iOS. On Android, buttons may
    be added below the options.
description: |
    | Android | iPhone | iPad |
    | ------- | ------ | ---- |
    | ![Android](./optiondialog_android.png) | ![iPhone](./optiondialog_iphone.png) | ![iPad](./optiondialog_ipad.png) |

    An option dialog is created using <Titanium.UI.createOptionDialog> or Alloy `<OptionDialog>`
    element. See Examples below for usage.

    This dialog is presented differently on each platform, as described below.

    #### Android

    On Android, the dialog is shown in the middle of the display (not touching the edges),
    with the option items represented in a picker. The previously-selected, or default, item can be
    set on creation.

    You can assign a [View](Titanium.UI.View) to the <Titanium.UI.OptionDialog.androidView> property
    to define a custom dialog UI and layout, or you can assign a set of options to the
    <Titanium.UI.OptionDialog.options> property, but not both. If both of these properties are set, the custom view
    will appear but the options will be hidden.

    Buttons below the picker may be optionally defined using the `buttonNames` property.
    The `click` event returns a Boolean value to indicate whether either an option item or a button was clicked.

    #### iOS

    The `destructive` property may be set for an item, to give a visual cue that selecting it
    results in an irreversible action. Option dialogs are automatically cancelled when the application is paused/suspended.

    ##### iPhone

    On iPhone, this dialog is shown at the bottom edge of the display, with the option items
    represented as vertical buttons.

    ##### iPad

    On iPad, this dialog is shown in the middle of the display, or as a popover-like dialog if
    another view or control is specified via an argument passed to the `open()` method.

    Note that on iPad, the cancel button is not displayed -- users can cancel the dialog
    by clicking outside of the dialog.

    #### Caveats

    Care should be taken not to define any properties that are not documented, as this may produce
    unexpected results. For example, setting a `message` property will prevent the picker of option
    items from being displayed on Android.
extends: Titanium.UI.View
since: "0.8"
excludes:
    events: [dblclick, doubletap, focus, keypressed, longclick, longpress, pinch, postlayout,
             singletap, swipe, touchcancel, touchend, touchmove, touchstart, twofingertap]
    methods: [add, animate, convertPointToView, remove, removeAllChildren, toImage, replaceAt]
    properties: [accessibilityHidden,accessibilityHint,accessibilityLabel,accessibilityValue,
                 anchorPoint,animatedCenter, backgroundColor,backgroundDisabledColor,
                 backgroundDisabledImage,backgroundFocusedColor,backgroundFocusedImage,backgroundGradient,
                 backgroundImage,backgroundLeftCap,backgroundRepeat,backgroundSelectedColor,
                 backgroundSelectedImage,backgroundTopCap,borderColor,borderRadius,borderWidth,bottom,center,
                 children,clipMode,focusable,height,horizontalWrap,keepScreenOn,layout,left,opacity,overrideCurrentAnimation,
                 pullBackgroundColor,rect,right,size,softKeyboardOnFocus,top,touchEnabled,transform,
                 viewShadowColor,viewShadowOffset,viewShadowRadius,visible,width,zIndex]

events:
  - name: click
    summary: |
        Fired when an option of this dialog is clicked or, under certain circumstances, when this
        dialog is dismissed.
    description: |
        On iOS as of Release 2.0, when the dialog is dismissed without using an option, for example, using
        the [hide](Titanium.UI.OptionDialog.hide) method (iPhone, iPad) or a tap outside of the
        dialog (iPad), this event is fired as though the cancel option was selected. In these
        circumstances, the `index` property will be the cancel option index if defined or `-1`
        otherwise.
    properties:
      - name: index
        summary: |
            Index of the option that was pressed. See description for result of the dialog being
            dismissed in some other way.
        type: Number

      - name: button
        summary: |
            Indicates whether the index returned by the `index` property relates to a button rather
            than an option item.
        type: Boolean
        platforms: [android]

      - name: cancel
        summary: |
            Boolean type on Android; Number on iOS.

            On Android, indicates whether the cancel button was clicked, in which
            case returns `true`.

            On iOS, the value of the [cancel](Titanium.UI.OptionDialog.cancel)
            property is returned, if defined, or `-1` otherwise.
        type: [Boolean, Number]

      - name: destructive
        summary: Index of the destructive option if defined or `-1` otherwise.
        type: Number
        platforms: [iphone, ipad, macos]

# FIXME: I think Android does support AnimatedOptions for show/hide (separately, versus how ios only really takes show and uses the animated value for hide), defaulting to false
methods:
  - name: show
    summary: Shows this dialog.
    description: |
        On iPad, this dialog is shown in the middle of the display or, when specified via the
        `params` argument, as a popover-like dialog attached to another view or control.
    parameters:
      - name: params
        # FIXME: I think this is used on iOS, not just iPad
        summary: Argument containing parameters for this method. Only used on iPad.
        type: showParams
        optional: true

  - name: hide
    summary: Hides this dialog.
    description: This triggers a `click` event as if cancel was invoked.
    parameters:
      - name: params
        summary: Argument containing parameters for this method. Only used on iOS.
        type: hideParams
        optional: true

properties:
  - name: androidView
    summary: View to load inside the message area, to create a custom layout.
    description: |
        On Android you can either define a custom view with this property, or you can assign a set of options to the
        <Titanium.UI.OptionDialog.options> property, but not both. If you do, the custom view will appear
        but not the options you defined.

        In an Alloy application you can specify this property with either an `<AndroidView/>` or
        `<View/>` element inside the `<OptionDialog/>` element, for example:

        ``` xml
        <Alloy>
            <OptionDialog id="dialog" title="Delete File?" onClick="clickCB">

                <!-- Add View or AndroidView for the androidView property -->
                <AndroidView platform="android" layout="vertical">
                    <Label color="red" text="Warning!  This change is permanent and you cannot undo it!" />
                </AndroidView>

                <ButtonNames>
                    <ButtonName>Confirm</ButtonName>
                    <ButtonName>Cancel</ButtonName>
                </ButtonNames>
            </OptionDialog>
        </Alloy>
        ```
    type: Titanium.UI.View
    platforms: [android]

  - name: buttonNames
    summary: List of button names.
    description: |
        This property creates buttons underneath the picker options.
        The dialog only supports up to three buttons.
    type: Array<String>
    platforms: [android]
    availability: creation

  - name: cancel
    summary: Index to define the cancel option.
    description: |
        On iOS, set to `-1` to disable the cancel option.

        On iPad, the `cancel` option must be set to either `-1` or the index of the last
        option. For example, if there are 3 options and one of them is a cancel button,
        the cancel button must be the last option (index 2).  If `cancel` is set to a
        different value, _the last entry in the [options](Titanium.UI.OptionDialog.options)
        array **is not displayed**._

        Note that the cancel button is never shown on iPad, since the user can cancel the
        dialog by clicking outside of the dialog.
    type: Number
    default: undefined (Android), -1 (iOS)

  - name: destructive
    summary: Index to define the destructive option, indicated by a visual cue when rendered.
    type: Number
    default: -1
    platforms: [iphone, ipad, macos]
    availability: creation

  - name: options
    summary: List of option names to display in the dialog.
    description: |
        On Android you can assign a set of options to the `OptionDialog` with this property, or
        assign a custom view to the  <Titanium.UI.OptionDialog.androidView> property, but not both.
        If you do, the custom view will appear but not the options you defined.
    type: Array<String>
    availability: creation

  - name: opaquebackground
    summary: Boolean value indicating if the option dialog should have an opaque background.
    description: |
        This property is useful to ensure that the option dialog will display contents properly
        on the iPAD idiom without ghosting when scrolling. This property is only respected on the
        iPAD idiom on iOS7 and above.
    type: Boolean
    default: false
    since: "3.2.0"
    platforms: [iphone, ipad, macos]

  - name: persistent
    summary: Boolean value indicating if the option dialog should only be cancelled by user
        gesture or by hide method.
    description: |
        This property is useful to ensure that the option dialog will not be ignored
        by the user when the application is paused/suspended.
    type: Boolean
    default: true
    since: "3.0.0"
    platforms: [android, iphone, ipad, macos]

  - name: selectedIndex
    summary: Defines the default selected option. Since `8.1.0`, if not defined or -1 it will show a
        normal list instead of radio buttons.
    platforms: [android]
    type: Number
    availability: creation

  - name: title
    summary: Title of the dialog.
    type: String

  - name: titleid
    summary: Key identifying a string in the locale file to use for the title text.
    type: String

examples:
  - title: Dialog with 3 Options
    example: |
        ``` js
        Ti.UI.setBackgroundColor('white');
        var win = Ti.UI.createWindow({
          title: 'Click window to test',
          backgroundColor: 'white'
        });

        var opts = {
          cancel: 2,
          options: ['Confirm', 'Help', 'Cancel'],
          selectedIndex: 2,
          destructive: 0,
          title: 'Delete File?'
        };

        win.addEventListener('click', function(e){
          var dialog = Ti.UI.createOptionDialog(opts).show();
        });
        win.open();
        ```

  - title: Dialog with 2 Options and 1 Button on Android and 3 Options on iOS
    example: |
        ``` js
        var win = Ti.UI.createWindow({
          title: 'Click window to test OptionDialog',
          backgroundColor: 'white'
        });

        var opts = {
          title: 'Delete File?'
        };

        var isAndroid = Ti.Platform.osname === 'android';

        if (isAndroid) {
          opts.options = ['Confirm', 'Cancel'];
          opts.buttonNames = ['Help'];
        } else {
          opts.options = ['Confirm', 'Help', 'Cancel'];
        }

        var dialog;
        win.addEventListener('click', function() {
          dialog = Ti.UI.createOptionDialog(opts);

          dialog.addEventListener('click', onSelectDialog);
          dialog.addEventListener('cancel', function(e) {
            alert('Dialog canceled! e.cancel = ' + e.cancel + ', e.index = ' + e.index);
          })

           dialog.show();
        });

        function onSelectDialog(e) {
          if (isAndroid) {
            if (e.button === false && e.index === 0) {
              alert('Confirm option selected! e.index = ' + e.index);
            }
            if (e.button === false && eventeindex === 1) {
              alert('Cancel option selected! e.index = ' + e.index);
            }
            if (e.button === true && e.index === 0) {
              alert('Help Button clicked! e.index = ' + e.index);
            }
          }
        }

        win.open();
        ```

  - title: Alloy XML Markup
    example: |
        Previous example as an Alloy view. You can set [cancel](Titanium.UI.OptionDialog.cancel)
        and [destructive](Titanium.UI.OptionDialog.destructive) on a `<Option/>` tag.

        optiondialog.xml:
        ``` xml
        <Alloy>
            <Window id="win" onClick="showOptions" title="Click window to test"
                fullscreen="false" onExit="true" backgroundColor="white">

                <!--
                    The OptionDialog tag declares an option dialog,
                    which will need to be opened by the controller.
                -->
                <OptionDialog id="dialog" title="Delete File?">

                    <!-- The Options tag sets the options property. -->
                    <Options>
                        <Option destructive="true">Confirm</Option>
                        <Option platform="ios">Help</Option>
                        <Option cancel="true">Cancel</Option>
                    </Options>

                    <!-- The ButtonNames tag sets the Android-only buttonNames property. -->
                    <ButtonNames>
                        <ButtonName>Help</ButtonName>
                    </ButtonNames>

                    <!-- Add a View for the androidView property here. -->

                </OptionDialog>

                <!-- Add views here -->

            </Window>
        </Alloy>
        ```

        optiondialog.js:
        ``` js
        function showOptions(){
            $.dialog.show();
        }
        ```

---
# FIXME: I don't think we actually take any args any more, it inherits the animated value from show on iOS!
name: hideParams
summary: Dictionary of options for the <Titanium.UI.OptionDialog.hide> method.
since: 2.0.0
platforms: [ipad, macos]

properties:
  - name: animated
    summary: Determines whether to animate the dialog as it is dismissed.
    type: Boolean

---
name: showParams
summary: Dictionary of options for the <Titanium.UI.OptionDialog.show> method.
platforms: [ipad, macos]

properties:
  - name: animated
    summary: Determines whether to animate the dialog as it is shown.
    type: Boolean
    optional: true

  - name: view
    summary: View to which to attach the dialog.
    type: Titanium.UI.View

  - name: rect
    summary: Positions the arrow of the option dialog relative to the attached view's dimensions.
    description: |
        Setting the x, y coordinates to (0, 0) places the dialog in the top-left corner of the
        view object.  Set both the `width` and `height` properties to 1.
    type: Dimension
    optional: true
